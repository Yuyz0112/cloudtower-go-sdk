// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BackupLicenseOrderByInput backup license order by input
//
// swagger:model BackupLicenseOrderByInput
type BackupLicenseOrderByInput string

func NewBackupLicenseOrderByInput(value BackupLicenseOrderByInput) *BackupLicenseOrderByInput {
	v := value
	return &v
}

const (

	// BackupLicenseOrderByInputCreatedAtASC captures enum value "createdAt_ASC"
	BackupLicenseOrderByInputCreatedAtASC BackupLicenseOrderByInput = "createdAt_ASC"

	// BackupLicenseOrderByInputCreatedAtDESC captures enum value "createdAt_DESC"
	BackupLicenseOrderByInputCreatedAtDESC BackupLicenseOrderByInput = "createdAt_DESC"

	// BackupLicenseOrderByInputEntityAsyncStatusASC captures enum value "entityAsyncStatus_ASC"
	BackupLicenseOrderByInputEntityAsyncStatusASC BackupLicenseOrderByInput = "entityAsyncStatus_ASC"

	// BackupLicenseOrderByInputEntityAsyncStatusDESC captures enum value "entityAsyncStatus_DESC"
	BackupLicenseOrderByInputEntityAsyncStatusDESC BackupLicenseOrderByInput = "entityAsyncStatus_DESC"

	// BackupLicenseOrderByInputExpireDateASC captures enum value "expire_date_ASC"
	BackupLicenseOrderByInputExpireDateASC BackupLicenseOrderByInput = "expire_date_ASC"

	// BackupLicenseOrderByInputExpireDateDESC captures enum value "expire_date_DESC"
	BackupLicenseOrderByInputExpireDateDESC BackupLicenseOrderByInput = "expire_date_DESC"

	// BackupLicenseOrderByInputIDASC captures enum value "id_ASC"
	BackupLicenseOrderByInputIDASC BackupLicenseOrderByInput = "id_ASC"

	// BackupLicenseOrderByInputIDDESC captures enum value "id_DESC"
	BackupLicenseOrderByInputIDDESC BackupLicenseOrderByInput = "id_DESC"

	// BackupLicenseOrderByInputLicenseSerialASC captures enum value "license_serial_ASC"
	BackupLicenseOrderByInputLicenseSerialASC BackupLicenseOrderByInput = "license_serial_ASC"

	// BackupLicenseOrderByInputLicenseSerialDESC captures enum value "license_serial_DESC"
	BackupLicenseOrderByInputLicenseSerialDESC BackupLicenseOrderByInput = "license_serial_DESC"

	// BackupLicenseOrderByInputMaxCapacityASC captures enum value "max_capacity_ASC"
	BackupLicenseOrderByInputMaxCapacityASC BackupLicenseOrderByInput = "max_capacity_ASC"

	// BackupLicenseOrderByInputMaxCapacityDESC captures enum value "max_capacity_DESC"
	BackupLicenseOrderByInputMaxCapacityDESC BackupLicenseOrderByInput = "max_capacity_DESC"

	// BackupLicenseOrderByInputSignDateASC captures enum value "sign_date_ASC"
	BackupLicenseOrderByInputSignDateASC BackupLicenseOrderByInput = "sign_date_ASC"

	// BackupLicenseOrderByInputSignDateDESC captures enum value "sign_date_DESC"
	BackupLicenseOrderByInputSignDateDESC BackupLicenseOrderByInput = "sign_date_DESC"

	// BackupLicenseOrderByInputSoftwareEditionASC captures enum value "software_edition_ASC"
	BackupLicenseOrderByInputSoftwareEditionASC BackupLicenseOrderByInput = "software_edition_ASC"

	// BackupLicenseOrderByInputSoftwareEditionDESC captures enum value "software_edition_DESC"
	BackupLicenseOrderByInputSoftwareEditionDESC BackupLicenseOrderByInput = "software_edition_DESC"

	// BackupLicenseOrderByInputTypeASC captures enum value "type_ASC"
	BackupLicenseOrderByInputTypeASC BackupLicenseOrderByInput = "type_ASC"

	// BackupLicenseOrderByInputTypeDESC captures enum value "type_DESC"
	BackupLicenseOrderByInputTypeDESC BackupLicenseOrderByInput = "type_DESC"

	// BackupLicenseOrderByInputUpdatedAtASC captures enum value "updatedAt_ASC"
	BackupLicenseOrderByInputUpdatedAtASC BackupLicenseOrderByInput = "updatedAt_ASC"

	// BackupLicenseOrderByInputUpdatedAtDESC captures enum value "updatedAt_DESC"
	BackupLicenseOrderByInputUpdatedAtDESC BackupLicenseOrderByInput = "updatedAt_DESC"
)

// for schema
var backupLicenseOrderByInputEnum []interface{}

func init() {
	var res []BackupLicenseOrderByInput
	if err := json.Unmarshal([]byte(`["createdAt_ASC","createdAt_DESC","entityAsyncStatus_ASC","entityAsyncStatus_DESC","expire_date_ASC","expire_date_DESC","id_ASC","id_DESC","license_serial_ASC","license_serial_DESC","max_capacity_ASC","max_capacity_DESC","sign_date_ASC","sign_date_DESC","software_edition_ASC","software_edition_DESC","type_ASC","type_DESC","updatedAt_ASC","updatedAt_DESC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		backupLicenseOrderByInputEnum = append(backupLicenseOrderByInputEnum, v)
	}
}

func (m BackupLicenseOrderByInput) validateBackupLicenseOrderByInputEnum(path, location string, value BackupLicenseOrderByInput) error {
	if err := validate.EnumCase(path, location, value, backupLicenseOrderByInputEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this backup license order by input
func (m BackupLicenseOrderByInput) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBackupLicenseOrderByInputEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this backup license order by input based on context it is used
func (m BackupLicenseOrderByInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
