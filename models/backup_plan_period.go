// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BackupPlanPeriod backup plan period
//
// swagger:model BackupPlanPeriod
type BackupPlanPeriod string

func NewBackupPlanPeriod(value BackupPlanPeriod) *BackupPlanPeriod {
	v := value
	return &v
}

const (

	// BackupPlanPeriodDAILY captures enum value "DAILY"
	BackupPlanPeriodDAILY BackupPlanPeriod = "DAILY"

	// BackupPlanPeriodMONTHLY captures enum value "MONTHLY"
	BackupPlanPeriodMONTHLY BackupPlanPeriod = "MONTHLY"

	// BackupPlanPeriodWEEKLY captures enum value "WEEKLY"
	BackupPlanPeriodWEEKLY BackupPlanPeriod = "WEEKLY"

	// BackupPlanPeriodYEARLY captures enum value "YEARLY"
	BackupPlanPeriodYEARLY BackupPlanPeriod = "YEARLY"
)

// for schema
var backupPlanPeriodEnum []interface{}

func init() {
	var res []BackupPlanPeriod
	if err := json.Unmarshal([]byte(`["DAILY","MONTHLY","WEEKLY","YEARLY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		backupPlanPeriodEnum = append(backupPlanPeriodEnum, v)
	}
}

func (m BackupPlanPeriod) validateBackupPlanPeriodEnum(path, location string, value BackupPlanPeriod) error {
	if err := validate.EnumCase(path, location, value, backupPlanPeriodEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this backup plan period
func (m BackupPlanPeriod) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBackupPlanPeriodEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this backup plan period based on context it is used
func (m BackupPlanPeriod) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
