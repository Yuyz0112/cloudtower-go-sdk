// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VMDiskType Vm disk type
//
// swagger:model VmDiskType
type VMDiskType string

func NewVMDiskType(value VMDiskType) *VMDiskType {
	v := value
	return &v
}

const (

	// VMDiskTypeCDROM captures enum value "CD_ROM"
	VMDiskTypeCDROM VMDiskType = "CD_ROM"

	// VMDiskTypeDISK captures enum value "DISK"
	VMDiskTypeDISK VMDiskType = "DISK"
)

// for schema
var vmDiskTypeEnum []interface{}

func init() {
	var res []VMDiskType
	if err := json.Unmarshal([]byte(`["CD_ROM","DISK"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vmDiskTypeEnum = append(vmDiskTypeEnum, v)
	}
}

func (m VMDiskType) validateVMDiskTypeEnum(path, location string, value VMDiskType) error {
	if err := validate.EnumCase(path, location, value, vmDiskTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Vm disk type
func (m VMDiskType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVMDiskTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this Vm disk type based on context it is used
func (m VMDiskType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
