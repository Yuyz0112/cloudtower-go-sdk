// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AlertRuleUnit alert rule unit
//
// swagger:model AlertRuleUnit
type AlertRuleUnit string

func NewAlertRuleUnit(value AlertRuleUnit) *AlertRuleUnit {
	v := value
	return &v
}

const (

	// AlertRuleUnitBIT captures enum value "BIT"
	AlertRuleUnitBIT AlertRuleUnit = "BIT"

	// AlertRuleUnitBYTE captures enum value "BYTE"
	AlertRuleUnitBYTE AlertRuleUnit = "BYTE"

	// AlertRuleUnitBYTEPERSECOND captures enum value "BYTE_PER_SECOND"
	AlertRuleUnitBYTEPERSECOND AlertRuleUnit = "BYTE_PER_SECOND"

	// AlertRuleUnitCELSIUS captures enum value "CELSIUS"
	AlertRuleUnitCELSIUS AlertRuleUnit = "CELSIUS"

	// AlertRuleUnitHERTZ captures enum value "HERTZ"
	AlertRuleUnitHERTZ AlertRuleUnit = "HERTZ"

	// AlertRuleUnitNANOSECOND captures enum value "NANOSECOND"
	AlertRuleUnitNANOSECOND AlertRuleUnit = "NANOSECOND"

	// AlertRuleUnitPERCENT captures enum value "PERCENT"
	AlertRuleUnitPERCENT AlertRuleUnit = "PERCENT"

	// AlertRuleUnitSECOND captures enum value "SECOND"
	AlertRuleUnitSECOND AlertRuleUnit = "SECOND"

	// AlertRuleUnitUNITUNSPECIFIED captures enum value "UNIT_UNSPECIFIED"
	AlertRuleUnitUNITUNSPECIFIED AlertRuleUnit = "UNIT_UNSPECIFIED"
)

// for schema
var alertRuleUnitEnum []interface{}

func init() {
	var res []AlertRuleUnit
	if err := json.Unmarshal([]byte(`["BIT","BYTE","BYTE_PER_SECOND","CELSIUS","HERTZ","NANOSECOND","PERCENT","SECOND","UNIT_UNSPECIFIED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertRuleUnitEnum = append(alertRuleUnitEnum, v)
	}
}

func (m AlertRuleUnit) validateAlertRuleUnitEnum(path, location string, value AlertRuleUnit) error {
	if err := validate.EnumCase(path, location, value, alertRuleUnitEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this alert rule unit
func (m AlertRuleUnit) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAlertRuleUnitEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this alert rule unit based on context it is used
func (m AlertRuleUnit) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
