// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BackupRestorePointWhereInput backup restore point where input
// Example: {"AND":"BackupRestorePointWhereInput[]","NOT":"BackupRestorePointWhereInput[]","OR":"BackupRestorePointWhereInput[]","backup_plan":"BackupPlanWhereInput","backup_service":"BackupServiceWhereInput","backup_store_repository":"BackupStoreRepositoryWhereInput","backup_target_execution":"BackupTargetExecutionWhereInput","cluster_local_id":"string","cluster_local_id_contains":"string","cluster_local_id_ends_with":"string","cluster_local_id_gt":"string","cluster_local_id_gte":"string","cluster_local_id_in":["string"],"cluster_local_id_lt":"string","cluster_local_id_lte":"string","cluster_local_id_not":"string","cluster_local_id_not_contains":"string","cluster_local_id_not_ends_with":"string","cluster_local_id_not_in":["string"],"cluster_local_id_not_starts_with":"string","cluster_local_id_starts_with":"string","compression_ratio":0,"compression_ratio_gt":0,"compression_ratio_gte":0,"compression_ratio_in":[0],"compression_ratio_lt":0,"compression_ratio_lte":0,"compression_ratio_not":0,"compression_ratio_not_in":[0],"creation":"AUTO","creation_in":["AUTO"],"creation_not":"AUTO","creation_not_in":["AUTO"],"entityAsyncStatus":"CREATING","entityAsyncStatus_in":["CREATING"],"entityAsyncStatus_not":"CREATING","entityAsyncStatus_not_in":["CREATING"],"id":"string","id_contains":"string","id_ends_with":"string","id_gt":"string","id_gte":"string","id_in":["string"],"id_lt":"string","id_lte":"string","id_not":"string","id_not_contains":"string","id_not_ends_with":"string","id_not_in":["string"],"id_not_starts_with":"string","id_starts_with":"string","local_created_at":"string","local_created_at_gt":"string","local_created_at_gte":"string","local_created_at_in":["string"],"local_created_at_lt":"string","local_created_at_lte":"string","local_created_at_not":"string","local_created_at_not_in":["string"],"local_id":"string","local_id_contains":"string","local_id_ends_with":"string","local_id_gt":"string","local_id_gte":"string","local_id_in":["string"],"local_id_lt":"string","local_id_lte":"string","local_id_not":"string","local_id_not_contains":"string","local_id_not_ends_with":"string","local_id_not_in":["string"],"local_id_not_starts_with":"string","local_id_starts_with":"string","logical_size":0,"logical_size_gt":0,"logical_size_gte":0,"logical_size_in":[0],"logical_size_lt":0,"logical_size_lte":0,"logical_size_not":0,"logical_size_not_in":[0],"parent_restore_point":"string","parent_restore_point_contains":"string","parent_restore_point_ends_with":"string","parent_restore_point_gt":"string","parent_restore_point_gte":"string","parent_restore_point_in":["string"],"parent_restore_point_lt":"string","parent_restore_point_lte":"string","parent_restore_point_not":"string","parent_restore_point_not_contains":"string","parent_restore_point_not_ends_with":"string","parent_restore_point_not_in":["string"],"parent_restore_point_not_starts_with":"string","parent_restore_point_starts_with":"string","physical_size":0,"physical_size_gt":0,"physical_size_gte":0,"physical_size_in":[0],"physical_size_lt":0,"physical_size_lte":0,"physical_size_not":0,"physical_size_not_in":[0],"resource_version_gt":0,"resource_version_gte":0,"resource_version_in":[0],"resource_version_lt":0,"resource_version_lte":0,"resource_version_not":0,"resource_version_not_in":[0],"size":0,"size_gt":0,"size_gte":0,"size_in":[0],"size_lt":0,"size_lte":0,"size_not":0,"size_not_in":[0],"slice":"string","slice_contains":"string","slice_ends_with":"string","slice_gt":"string","slice_gte":"string","slice_in":["string"],"slice_lt":"string","slice_lte":"string","slice_not":"string","slice_not_contains":"string","slice_not_ends_with":"string","slice_not_in":["string"],"slice_not_starts_with":"string","slice_starts_with":"string","type":"FULL","type_in":["FULL"],"type_not":"FULL","type_not_in":["FULL"],"valid_capacity":0,"valid_capacity_gt":0,"valid_capacity_gte":0,"valid_capacity_in":[0],"valid_capacity_lt":0,"valid_capacity_lte":0,"valid_capacity_not":0,"valid_capacity_not_in":[0],"valid_size":0,"valid_size_gt":0,"valid_size_gte":0,"valid_size_in":[0],"valid_size_lt":0,"valid_size_lte":0,"valid_size_not":0,"valid_size_not_in":[0],"vm":"VmWhereInput","vm_local_id":"string","vm_local_id_contains":"string","vm_local_id_ends_with":"string","vm_local_id_gt":"string","vm_local_id_gte":"string","vm_local_id_in":["string"],"vm_local_id_lt":"string","vm_local_id_lte":"string","vm_local_id_not":"string","vm_local_id_not_contains":"string","vm_local_id_not_ends_with":"string","vm_local_id_not_in":["string"],"vm_local_id_not_starts_with":"string","vm_local_id_starts_with":"string","vm_name":"string","vm_name_contains":"string","vm_name_ends_with":"string","vm_name_gt":"string","vm_name_gte":"string","vm_name_in":["string"],"vm_name_lt":"string","vm_name_lte":"string","vm_name_not":"string","vm_name_not_contains":"string","vm_name_not_ends_with":"string","vm_name_not_in":["string"],"vm_name_not_starts_with":"string","vm_name_starts_with":"string"}
//
// swagger:model BackupRestorePointWhereInput
type BackupRestorePointWhereInput struct {

	// a n d
	AND []*BackupRestorePointWhereInput `json:"AND,omitempty"`

	// n o t
	NOT []*BackupRestorePointWhereInput `json:"NOT,omitempty"`

	// o r
	OR []*BackupRestorePointWhereInput `json:"OR,omitempty"`

	// backup plan
	BackupPlan interface{} `json:"backup_plan,omitempty"`

	// backup service
	BackupService interface{} `json:"backup_service,omitempty"`

	// backup store repository
	BackupStoreRepository interface{} `json:"backup_store_repository,omitempty"`

	// backup target execution
	BackupTargetExecution interface{} `json:"backup_target_execution,omitempty"`

	// cluster local id
	ClusterLocalID *string `json:"cluster_local_id,omitempty"`

	// cluster local id contains
	ClusterLocalIDContains *string `json:"cluster_local_id_contains,omitempty"`

	// cluster local id ends with
	ClusterLocalIDEndsWith *string `json:"cluster_local_id_ends_with,omitempty"`

	// cluster local id gt
	ClusterLocalIDGt *string `json:"cluster_local_id_gt,omitempty"`

	// cluster local id gte
	ClusterLocalIDGte *string `json:"cluster_local_id_gte,omitempty"`

	// cluster local id in
	ClusterLocalIDIn []string `json:"cluster_local_id_in,omitempty"`

	// cluster local id lt
	ClusterLocalIDLt *string `json:"cluster_local_id_lt,omitempty"`

	// cluster local id lte
	ClusterLocalIDLte *string `json:"cluster_local_id_lte,omitempty"`

	// cluster local id not
	ClusterLocalIDNot *string `json:"cluster_local_id_not,omitempty"`

	// cluster local id not contains
	ClusterLocalIDNotContains *string `json:"cluster_local_id_not_contains,omitempty"`

	// cluster local id not ends with
	ClusterLocalIDNotEndsWith *string `json:"cluster_local_id_not_ends_with,omitempty"`

	// cluster local id not in
	ClusterLocalIDNotIn []string `json:"cluster_local_id_not_in,omitempty"`

	// cluster local id not starts with
	ClusterLocalIDNotStartsWith *string `json:"cluster_local_id_not_starts_with,omitempty"`

	// cluster local id starts with
	ClusterLocalIDStartsWith *string `json:"cluster_local_id_starts_with,omitempty"`

	// compression ratio
	CompressionRatio *float64 `json:"compression_ratio,omitempty"`

	// compression ratio gt
	CompressionRatioGt *float64 `json:"compression_ratio_gt,omitempty"`

	// compression ratio gte
	CompressionRatioGte *float64 `json:"compression_ratio_gte,omitempty"`

	// compression ratio in
	CompressionRatioIn []float64 `json:"compression_ratio_in,omitempty"`

	// compression ratio lt
	CompressionRatioLt *float64 `json:"compression_ratio_lt,omitempty"`

	// compression ratio lte
	CompressionRatioLte *float64 `json:"compression_ratio_lte,omitempty"`

	// compression ratio not
	CompressionRatioNot *float64 `json:"compression_ratio_not,omitempty"`

	// compression ratio not in
	CompressionRatioNotIn []float64 `json:"compression_ratio_not_in,omitempty"`

	// creation
	Creation interface{} `json:"creation,omitempty"`

	// creation in
	CreationIn []BackupRestorePointCreation `json:"creation_in,omitempty"`

	// creation not
	CreationNot interface{} `json:"creation_not,omitempty"`

	// creation not in
	CreationNotIn []BackupRestorePointCreation `json:"creation_not_in,omitempty"`

	// entity async status
	EntityAsyncStatus interface{} `json:"entityAsyncStatus,omitempty"`

	// entity async status in
	EntityAsyncStatusIn []EntityAsyncStatus `json:"entityAsyncStatus_in,omitempty"`

	// entity async status not
	EntityAsyncStatusNot interface{} `json:"entityAsyncStatus_not,omitempty"`

	// entity async status not in
	EntityAsyncStatusNotIn []EntityAsyncStatus `json:"entityAsyncStatus_not_in,omitempty"`

	// id
	ID *string `json:"id,omitempty"`

	// id contains
	IDContains *string `json:"id_contains,omitempty"`

	// id ends with
	IDEndsWith *string `json:"id_ends_with,omitempty"`

	// id gt
	IDGt *string `json:"id_gt,omitempty"`

	// id gte
	IDGte *string `json:"id_gte,omitempty"`

	// id in
	IDIn []string `json:"id_in,omitempty"`

	// id lt
	IDLt *string `json:"id_lt,omitempty"`

	// id lte
	IDLte *string `json:"id_lte,omitempty"`

	// id not
	IDNot *string `json:"id_not,omitempty"`

	// id not contains
	IDNotContains *string `json:"id_not_contains,omitempty"`

	// id not ends with
	IDNotEndsWith *string `json:"id_not_ends_with,omitempty"`

	// id not in
	IDNotIn []string `json:"id_not_in,omitempty"`

	// id not starts with
	IDNotStartsWith *string `json:"id_not_starts_with,omitempty"`

	// id starts with
	IDStartsWith *string `json:"id_starts_with,omitempty"`

	// local created at
	LocalCreatedAt *string `json:"local_created_at,omitempty"`

	// local created at gt
	LocalCreatedAtGt *string `json:"local_created_at_gt,omitempty"`

	// local created at gte
	LocalCreatedAtGte *string `json:"local_created_at_gte,omitempty"`

	// local created at in
	LocalCreatedAtIn []string `json:"local_created_at_in,omitempty"`

	// local created at lt
	LocalCreatedAtLt *string `json:"local_created_at_lt,omitempty"`

	// local created at lte
	LocalCreatedAtLte *string `json:"local_created_at_lte,omitempty"`

	// local created at not
	LocalCreatedAtNot *string `json:"local_created_at_not,omitempty"`

	// local created at not in
	LocalCreatedAtNotIn []string `json:"local_created_at_not_in,omitempty"`

	// local id
	LocalID *string `json:"local_id,omitempty"`

	// local id contains
	LocalIDContains *string `json:"local_id_contains,omitempty"`

	// local id ends with
	LocalIDEndsWith *string `json:"local_id_ends_with,omitempty"`

	// local id gt
	LocalIDGt *string `json:"local_id_gt,omitempty"`

	// local id gte
	LocalIDGte *string `json:"local_id_gte,omitempty"`

	// local id in
	LocalIDIn []string `json:"local_id_in,omitempty"`

	// local id lt
	LocalIDLt *string `json:"local_id_lt,omitempty"`

	// local id lte
	LocalIDLte *string `json:"local_id_lte,omitempty"`

	// local id not
	LocalIDNot *string `json:"local_id_not,omitempty"`

	// local id not contains
	LocalIDNotContains *string `json:"local_id_not_contains,omitempty"`

	// local id not ends with
	LocalIDNotEndsWith *string `json:"local_id_not_ends_with,omitempty"`

	// local id not in
	LocalIDNotIn []string `json:"local_id_not_in,omitempty"`

	// local id not starts with
	LocalIDNotStartsWith *string `json:"local_id_not_starts_with,omitempty"`

	// local id starts with
	LocalIDStartsWith *string `json:"local_id_starts_with,omitempty"`

	// logical size
	LogicalSize *float64 `json:"logical_size,omitempty"`

	// logical size gt
	LogicalSizeGt *float64 `json:"logical_size_gt,omitempty"`

	// logical size gte
	LogicalSizeGte *float64 `json:"logical_size_gte,omitempty"`

	// logical size in
	LogicalSizeIn []float64 `json:"logical_size_in,omitempty"`

	// logical size lt
	LogicalSizeLt *float64 `json:"logical_size_lt,omitempty"`

	// logical size lte
	LogicalSizeLte *float64 `json:"logical_size_lte,omitempty"`

	// logical size not
	LogicalSizeNot *float64 `json:"logical_size_not,omitempty"`

	// logical size not in
	LogicalSizeNotIn []float64 `json:"logical_size_not_in,omitempty"`

	// parent restore point
	ParentRestorePoint *string `json:"parent_restore_point,omitempty"`

	// parent restore point contains
	ParentRestorePointContains *string `json:"parent_restore_point_contains,omitempty"`

	// parent restore point ends with
	ParentRestorePointEndsWith *string `json:"parent_restore_point_ends_with,omitempty"`

	// parent restore point gt
	ParentRestorePointGt *string `json:"parent_restore_point_gt,omitempty"`

	// parent restore point gte
	ParentRestorePointGte *string `json:"parent_restore_point_gte,omitempty"`

	// parent restore point in
	ParentRestorePointIn []string `json:"parent_restore_point_in,omitempty"`

	// parent restore point lt
	ParentRestorePointLt *string `json:"parent_restore_point_lt,omitempty"`

	// parent restore point lte
	ParentRestorePointLte *string `json:"parent_restore_point_lte,omitempty"`

	// parent restore point not
	ParentRestorePointNot *string `json:"parent_restore_point_not,omitempty"`

	// parent restore point not contains
	ParentRestorePointNotContains *string `json:"parent_restore_point_not_contains,omitempty"`

	// parent restore point not ends with
	ParentRestorePointNotEndsWith *string `json:"parent_restore_point_not_ends_with,omitempty"`

	// parent restore point not in
	ParentRestorePointNotIn []string `json:"parent_restore_point_not_in,omitempty"`

	// parent restore point not starts with
	ParentRestorePointNotStartsWith *string `json:"parent_restore_point_not_starts_with,omitempty"`

	// parent restore point starts with
	ParentRestorePointStartsWith *string `json:"parent_restore_point_starts_with,omitempty"`

	// physical size
	PhysicalSize *float64 `json:"physical_size,omitempty"`

	// physical size gt
	PhysicalSizeGt *float64 `json:"physical_size_gt,omitempty"`

	// physical size gte
	PhysicalSizeGte *float64 `json:"physical_size_gte,omitempty"`

	// physical size in
	PhysicalSizeIn []float64 `json:"physical_size_in,omitempty"`

	// physical size lt
	PhysicalSizeLt *float64 `json:"physical_size_lt,omitempty"`

	// physical size lte
	PhysicalSizeLte *float64 `json:"physical_size_lte,omitempty"`

	// physical size not
	PhysicalSizeNot *float64 `json:"physical_size_not,omitempty"`

	// physical size not in
	PhysicalSizeNotIn []float64 `json:"physical_size_not_in,omitempty"`

	// resource version gt
	ResourceVersionGt *int32 `json:"resource_version_gt,omitempty"`

	// resource version gte
	ResourceVersionGte *int32 `json:"resource_version_gte,omitempty"`

	// resource version in
	ResourceVersionIn []int32 `json:"resource_version_in,omitempty"`

	// resource version lt
	ResourceVersionLt *int32 `json:"resource_version_lt,omitempty"`

	// resource version lte
	ResourceVersionLte *int32 `json:"resource_version_lte,omitempty"`

	// resource version not
	ResourceVersionNot *int32 `json:"resource_version_not,omitempty"`

	// resource version not in
	ResourceVersionNotIn []int32 `json:"resource_version_not_in,omitempty"`

	// size
	Size *float64 `json:"size,omitempty"`

	// size gt
	SizeGt *float64 `json:"size_gt,omitempty"`

	// size gte
	SizeGte *float64 `json:"size_gte,omitempty"`

	// size in
	SizeIn []float64 `json:"size_in,omitempty"`

	// size lt
	SizeLt *float64 `json:"size_lt,omitempty"`

	// size lte
	SizeLte *float64 `json:"size_lte,omitempty"`

	// size not
	SizeNot *float64 `json:"size_not,omitempty"`

	// size not in
	SizeNotIn []float64 `json:"size_not_in,omitempty"`

	// slice
	Slice *string `json:"slice,omitempty"`

	// slice contains
	SliceContains *string `json:"slice_contains,omitempty"`

	// slice ends with
	SliceEndsWith *string `json:"slice_ends_with,omitempty"`

	// slice gt
	SliceGt *string `json:"slice_gt,omitempty"`

	// slice gte
	SliceGte *string `json:"slice_gte,omitempty"`

	// slice in
	SliceIn []string `json:"slice_in,omitempty"`

	// slice lt
	SliceLt *string `json:"slice_lt,omitempty"`

	// slice lte
	SliceLte *string `json:"slice_lte,omitempty"`

	// slice not
	SliceNot *string `json:"slice_not,omitempty"`

	// slice not contains
	SliceNotContains *string `json:"slice_not_contains,omitempty"`

	// slice not ends with
	SliceNotEndsWith *string `json:"slice_not_ends_with,omitempty"`

	// slice not in
	SliceNotIn []string `json:"slice_not_in,omitempty"`

	// slice not starts with
	SliceNotStartsWith *string `json:"slice_not_starts_with,omitempty"`

	// slice starts with
	SliceStartsWith *string `json:"slice_starts_with,omitempty"`

	// type
	Type interface{} `json:"type,omitempty"`

	// type in
	TypeIn []BackupRestorePointType `json:"type_in,omitempty"`

	// type not
	TypeNot interface{} `json:"type_not,omitempty"`

	// type not in
	TypeNotIn []BackupRestorePointType `json:"type_not_in,omitempty"`

	// valid capacity
	ValidCapacity *float64 `json:"valid_capacity,omitempty"`

	// valid capacity gt
	ValidCapacityGt *float64 `json:"valid_capacity_gt,omitempty"`

	// valid capacity gte
	ValidCapacityGte *float64 `json:"valid_capacity_gte,omitempty"`

	// valid capacity in
	ValidCapacityIn []float64 `json:"valid_capacity_in,omitempty"`

	// valid capacity lt
	ValidCapacityLt *float64 `json:"valid_capacity_lt,omitempty"`

	// valid capacity lte
	ValidCapacityLte *float64 `json:"valid_capacity_lte,omitempty"`

	// valid capacity not
	ValidCapacityNot *float64 `json:"valid_capacity_not,omitempty"`

	// valid capacity not in
	ValidCapacityNotIn []float64 `json:"valid_capacity_not_in,omitempty"`

	// valid size
	ValidSize *float64 `json:"valid_size,omitempty"`

	// valid size gt
	ValidSizeGt *float64 `json:"valid_size_gt,omitempty"`

	// valid size gte
	ValidSizeGte *float64 `json:"valid_size_gte,omitempty"`

	// valid size in
	ValidSizeIn []float64 `json:"valid_size_in,omitempty"`

	// valid size lt
	ValidSizeLt *float64 `json:"valid_size_lt,omitempty"`

	// valid size lte
	ValidSizeLte *float64 `json:"valid_size_lte,omitempty"`

	// valid size not
	ValidSizeNot *float64 `json:"valid_size_not,omitempty"`

	// valid size not in
	ValidSizeNotIn []float64 `json:"valid_size_not_in,omitempty"`

	// vm
	VM interface{} `json:"vm,omitempty"`

	// vm local id
	VMLocalID *string `json:"vm_local_id,omitempty"`

	// vm local id contains
	VMLocalIDContains *string `json:"vm_local_id_contains,omitempty"`

	// vm local id ends with
	VMLocalIDEndsWith *string `json:"vm_local_id_ends_with,omitempty"`

	// vm local id gt
	VMLocalIDGt *string `json:"vm_local_id_gt,omitempty"`

	// vm local id gte
	VMLocalIDGte *string `json:"vm_local_id_gte,omitempty"`

	// vm local id in
	VMLocalIDIn []string `json:"vm_local_id_in,omitempty"`

	// vm local id lt
	VMLocalIDLt *string `json:"vm_local_id_lt,omitempty"`

	// vm local id lte
	VMLocalIDLte *string `json:"vm_local_id_lte,omitempty"`

	// vm local id not
	VMLocalIDNot *string `json:"vm_local_id_not,omitempty"`

	// vm local id not contains
	VMLocalIDNotContains *string `json:"vm_local_id_not_contains,omitempty"`

	// vm local id not ends with
	VMLocalIDNotEndsWith *string `json:"vm_local_id_not_ends_with,omitempty"`

	// vm local id not in
	VMLocalIDNotIn []string `json:"vm_local_id_not_in,omitempty"`

	// vm local id not starts with
	VMLocalIDNotStartsWith *string `json:"vm_local_id_not_starts_with,omitempty"`

	// vm local id starts with
	VMLocalIDStartsWith *string `json:"vm_local_id_starts_with,omitempty"`

	// vm name
	VMName *string `json:"vm_name,omitempty"`

	// vm name contains
	VMNameContains *string `json:"vm_name_contains,omitempty"`

	// vm name ends with
	VMNameEndsWith *string `json:"vm_name_ends_with,omitempty"`

	// vm name gt
	VMNameGt *string `json:"vm_name_gt,omitempty"`

	// vm name gte
	VMNameGte *string `json:"vm_name_gte,omitempty"`

	// vm name in
	VMNameIn []string `json:"vm_name_in,omitempty"`

	// vm name lt
	VMNameLt *string `json:"vm_name_lt,omitempty"`

	// vm name lte
	VMNameLte *string `json:"vm_name_lte,omitempty"`

	// vm name not
	VMNameNot *string `json:"vm_name_not,omitempty"`

	// vm name not contains
	VMNameNotContains *string `json:"vm_name_not_contains,omitempty"`

	// vm name not ends with
	VMNameNotEndsWith *string `json:"vm_name_not_ends_with,omitempty"`

	// vm name not in
	VMNameNotIn []string `json:"vm_name_not_in,omitempty"`

	// vm name not starts with
	VMNameNotStartsWith *string `json:"vm_name_not_starts_with,omitempty"`

	// vm name starts with
	VMNameStartsWith *string `json:"vm_name_starts_with,omitempty"`
}

// Validate validates this backup restore point where input
func (m *BackupRestorePointWhereInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAND(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNOT(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOR(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreationIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreationNotIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntityAsyncStatusIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntityAsyncStatusNotIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTypeIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTypeNotIn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BackupRestorePointWhereInput) validateAND(formats strfmt.Registry) error {
	if swag.IsZero(m.AND) { // not required
		return nil
	}

	for i := 0; i < len(m.AND); i++ {
		if swag.IsZero(m.AND[i]) { // not required
			continue
		}

		if m.AND[i] != nil {
			if err := m.AND[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AND" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) validateNOT(formats strfmt.Registry) error {
	if swag.IsZero(m.NOT) { // not required
		return nil
	}

	for i := 0; i < len(m.NOT); i++ {
		if swag.IsZero(m.NOT[i]) { // not required
			continue
		}

		if m.NOT[i] != nil {
			if err := m.NOT[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("NOT" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) validateOR(formats strfmt.Registry) error {
	if swag.IsZero(m.OR) { // not required
		return nil
	}

	for i := 0; i < len(m.OR); i++ {
		if swag.IsZero(m.OR[i]) { // not required
			continue
		}

		if m.OR[i] != nil {
			if err := m.OR[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("OR" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) validateCreationIn(formats strfmt.Registry) error {
	if swag.IsZero(m.CreationIn) { // not required
		return nil
	}

	for i := 0; i < len(m.CreationIn); i++ {

		if err := m.CreationIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("creation_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) validateCreationNotIn(formats strfmt.Registry) error {
	if swag.IsZero(m.CreationNotIn) { // not required
		return nil
	}

	for i := 0; i < len(m.CreationNotIn); i++ {

		if err := m.CreationNotIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("creation_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) validateEntityAsyncStatusIn(formats strfmt.Registry) error {
	if swag.IsZero(m.EntityAsyncStatusIn) { // not required
		return nil
	}

	for i := 0; i < len(m.EntityAsyncStatusIn); i++ {

		if err := m.EntityAsyncStatusIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("entityAsyncStatus_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) validateEntityAsyncStatusNotIn(formats strfmt.Registry) error {
	if swag.IsZero(m.EntityAsyncStatusNotIn) { // not required
		return nil
	}

	for i := 0; i < len(m.EntityAsyncStatusNotIn); i++ {

		if err := m.EntityAsyncStatusNotIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("entityAsyncStatus_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) validateTypeIn(formats strfmt.Registry) error {
	if swag.IsZero(m.TypeIn) { // not required
		return nil
	}

	for i := 0; i < len(m.TypeIn); i++ {

		if err := m.TypeIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("type_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) validateTypeNotIn(formats strfmt.Registry) error {
	if swag.IsZero(m.TypeNotIn) { // not required
		return nil
	}

	for i := 0; i < len(m.TypeNotIn); i++ {

		if err := m.TypeNotIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("type_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// ContextValidate validate this backup restore point where input based on the context it is used
func (m *BackupRestorePointWhereInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAND(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateNOT(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateOR(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateCreationIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateCreationNotIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateEntityAsyncStatusIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateEntityAsyncStatusNotIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTypeIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTypeNotIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BackupRestorePointWhereInput) contextValidateAND(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.AND); i++ {

		if m.AND[i] != nil {
			if err := m.AND[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AND" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) contextValidateNOT(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.NOT); i++ {

		if m.NOT[i] != nil {
			if err := m.NOT[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("NOT" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) contextValidateOR(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.OR); i++ {

		if m.OR[i] != nil {
			if err := m.OR[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("OR" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) contextValidateCreationIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.CreationIn); i++ {

		if err := m.CreationIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("creation_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) contextValidateCreationNotIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.CreationNotIn); i++ {

		if err := m.CreationNotIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("creation_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) contextValidateEntityAsyncStatusIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.EntityAsyncStatusIn); i++ {

		if err := m.EntityAsyncStatusIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("entityAsyncStatus_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) contextValidateEntityAsyncStatusNotIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.EntityAsyncStatusNotIn); i++ {

		if err := m.EntityAsyncStatusNotIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("entityAsyncStatus_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) contextValidateTypeIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.TypeIn); i++ {

		if err := m.TypeIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("type_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *BackupRestorePointWhereInput) contextValidateTypeNotIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.TypeNotIn); i++ {

		if err := m.TypeNotIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("type_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *BackupRestorePointWhereInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BackupRestorePointWhereInput) UnmarshalBinary(b []byte) error {
	var res BackupRestorePointWhereInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
