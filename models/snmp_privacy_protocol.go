// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SnmpPrivacyProtocol snmp privacy protocol
//
// swagger:model SnmpPrivacyProtocol
type SnmpPrivacyProtocol string

func NewSnmpPrivacyProtocol(value SnmpPrivacyProtocol) *SnmpPrivacyProtocol {
	v := value
	return &v
}

const (

	// SnmpPrivacyProtocolAES captures enum value "AES"
	SnmpPrivacyProtocolAES SnmpPrivacyProtocol = "AES"

	// SnmpPrivacyProtocolDES captures enum value "DES"
	SnmpPrivacyProtocolDES SnmpPrivacyProtocol = "DES"
)

// for schema
var snmpPrivacyProtocolEnum []interface{}

func init() {
	var res []SnmpPrivacyProtocol
	if err := json.Unmarshal([]byte(`["AES","DES"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		snmpPrivacyProtocolEnum = append(snmpPrivacyProtocolEnum, v)
	}
}

func (m SnmpPrivacyProtocol) validateSnmpPrivacyProtocolEnum(path, location string, value SnmpPrivacyProtocol) error {
	if err := validate.EnumCase(path, location, value, snmpPrivacyProtocolEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this snmp privacy protocol
func (m SnmpPrivacyProtocol) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSnmpPrivacyProtocolEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this snmp privacy protocol based on context it is used
func (m SnmpPrivacyProtocol) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
