// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DiskHealthStatus disk health status
//
// swagger:model DiskHealthStatus
type DiskHealthStatus string

func NewDiskHealthStatus(value DiskHealthStatus) *DiskHealthStatus {
	v := value
	return &v
}

const (

	// DiskHealthStatusHEALTHY captures enum value "HEALTHY"
	DiskHealthStatusHEALTHY DiskHealthStatus = "HEALTHY"

	// DiskHealthStatusSMARTFAILED captures enum value "SMART_FAILED"
	DiskHealthStatusSMARTFAILED DiskHealthStatus = "SMART_FAILED"

	// DiskHealthStatusSUBHEALTHY captures enum value "SUBHEALTHY"
	DiskHealthStatusSUBHEALTHY DiskHealthStatus = "SUBHEALTHY"

	// DiskHealthStatusUNHEALTHY captures enum value "UNHEALTHY"
	DiskHealthStatusUNHEALTHY DiskHealthStatus = "UNHEALTHY"
)

// for schema
var diskHealthStatusEnum []interface{}

func init() {
	var res []DiskHealthStatus
	if err := json.Unmarshal([]byte(`["HEALTHY","SMART_FAILED","SUBHEALTHY","UNHEALTHY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		diskHealthStatusEnum = append(diskHealthStatusEnum, v)
	}
}

func (m DiskHealthStatus) validateDiskHealthStatusEnum(path, location string, value DiskHealthStatus) error {
	if err := validate.EnumCase(path, location, value, diskHealthStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this disk health status
func (m DiskHealthStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDiskHealthStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this disk health status based on context it is used
func (m DiskHealthStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
