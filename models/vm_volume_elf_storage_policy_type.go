// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VMVolumeElfStoragePolicyType Vm volume elf storage policy type
//
// swagger:model VmVolumeElfStoragePolicyType
type VMVolumeElfStoragePolicyType string

func NewVMVolumeElfStoragePolicyType(value VMVolumeElfStoragePolicyType) *VMVolumeElfStoragePolicyType {
	v := value
	return &v
}

const (

	// VMVolumeElfStoragePolicyTypeREPLICA1THICKPROVISION captures enum value "REPLICA_1_THICK_PROVISION"
	VMVolumeElfStoragePolicyTypeREPLICA1THICKPROVISION VMVolumeElfStoragePolicyType = "REPLICA_1_THICK_PROVISION"

	// VMVolumeElfStoragePolicyTypeREPLICA1THINPROVISION captures enum value "REPLICA_1_THIN_PROVISION"
	VMVolumeElfStoragePolicyTypeREPLICA1THINPROVISION VMVolumeElfStoragePolicyType = "REPLICA_1_THIN_PROVISION"

	// VMVolumeElfStoragePolicyTypeREPLICA2THICKPROVISION captures enum value "REPLICA_2_THICK_PROVISION"
	VMVolumeElfStoragePolicyTypeREPLICA2THICKPROVISION VMVolumeElfStoragePolicyType = "REPLICA_2_THICK_PROVISION"

	// VMVolumeElfStoragePolicyTypeREPLICA2THINPROVISION captures enum value "REPLICA_2_THIN_PROVISION"
	VMVolumeElfStoragePolicyTypeREPLICA2THINPROVISION VMVolumeElfStoragePolicyType = "REPLICA_2_THIN_PROVISION"

	// VMVolumeElfStoragePolicyTypeREPLICA3THICKPROVISION captures enum value "REPLICA_3_THICK_PROVISION"
	VMVolumeElfStoragePolicyTypeREPLICA3THICKPROVISION VMVolumeElfStoragePolicyType = "REPLICA_3_THICK_PROVISION"

	// VMVolumeElfStoragePolicyTypeREPLICA3THINPROVISION captures enum value "REPLICA_3_THIN_PROVISION"
	VMVolumeElfStoragePolicyTypeREPLICA3THINPROVISION VMVolumeElfStoragePolicyType = "REPLICA_3_THIN_PROVISION"
)

// for schema
var vmVolumeElfStoragePolicyTypeEnum []interface{}

func init() {
	var res []VMVolumeElfStoragePolicyType
	if err := json.Unmarshal([]byte(`["REPLICA_1_THICK_PROVISION","REPLICA_1_THIN_PROVISION","REPLICA_2_THICK_PROVISION","REPLICA_2_THIN_PROVISION","REPLICA_3_THICK_PROVISION","REPLICA_3_THIN_PROVISION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vmVolumeElfStoragePolicyTypeEnum = append(vmVolumeElfStoragePolicyTypeEnum, v)
	}
}

func (m VMVolumeElfStoragePolicyType) validateVMVolumeElfStoragePolicyTypeEnum(path, location string, value VMVolumeElfStoragePolicyType) error {
	if err := validate.EnumCase(path, location, value, vmVolumeElfStoragePolicyTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Vm volume elf storage policy type
func (m VMVolumeElfStoragePolicyType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVMVolumeElfStoragePolicyTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this Vm volume elf storage policy type based on context it is used
func (m VMVolumeElfStoragePolicyType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
