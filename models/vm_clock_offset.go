// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VMClockOffset Vm clock offset
//
// swagger:model VmClockOffset
type VMClockOffset string

func NewVMClockOffset(value VMClockOffset) *VMClockOffset {
	v := value
	return &v
}

const (

	// VMClockOffsetLOCALTIME captures enum value "LOCALTIME"
	VMClockOffsetLOCALTIME VMClockOffset = "LOCALTIME"

	// VMClockOffsetUTC captures enum value "UTC"
	VMClockOffsetUTC VMClockOffset = "UTC"
)

// for schema
var vmClockOffsetEnum []interface{}

func init() {
	var res []VMClockOffset
	if err := json.Unmarshal([]byte(`["LOCALTIME","UTC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vmClockOffsetEnum = append(vmClockOffsetEnum, v)
	}
}

func (m VMClockOffset) validateVMClockOffsetEnum(path, location string, value VMClockOffset) error {
	if err := validate.EnumCase(path, location, value, vmClockOffsetEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Vm clock offset
func (m VMClockOffset) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVMClockOffsetEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this Vm clock offset based on context it is used
func (m VMClockOffset) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
