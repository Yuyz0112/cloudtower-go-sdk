// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HostState host state
//
// swagger:model HostState
type HostState string

func NewHostState(value HostState) *HostState {
	v := value
	return &v
}

const (

	// HostStateIDLE captures enum value "IDLE"
	HostStateIDLE HostState = "IDLE"

	// HostStateINUSE captures enum value "IN_USE"
	HostStateINUSE HostState = "IN_USE"

	// HostStateREMOVING captures enum value "REMOVING"
	HostStateREMOVING HostState = "REMOVING"
)

// for schema
var hostStateEnum []interface{}

func init() {
	var res []HostState
	if err := json.Unmarshal([]byte(`["IDLE","IN_USE","REMOVING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hostStateEnum = append(hostStateEnum, v)
	}
}

func (m HostState) validateHostStateEnum(path, location string, value HostState) error {
	if err := validate.EnumCase(path, location, value, hostStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this host state
func (m HostState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHostStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this host state based on context it is used
func (m HostState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
