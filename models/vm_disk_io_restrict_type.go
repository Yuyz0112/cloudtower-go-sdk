// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VMDiskIoRestrictType Vm disk io restrict type
//
// swagger:model VmDiskIoRestrictType
type VMDiskIoRestrictType string

func NewVMDiskIoRestrictType(value VMDiskIoRestrictType) *VMDiskIoRestrictType {
	v := value
	return &v
}

const (

	// VMDiskIoRestrictTypeDYNAMIC captures enum value "DYNAMIC"
	VMDiskIoRestrictTypeDYNAMIC VMDiskIoRestrictType = "DYNAMIC"

	// VMDiskIoRestrictTypeFORCED captures enum value "FORCED"
	VMDiskIoRestrictTypeFORCED VMDiskIoRestrictType = "FORCED"
)

// for schema
var vmDiskIoRestrictTypeEnum []interface{}

func init() {
	var res []VMDiskIoRestrictType
	if err := json.Unmarshal([]byte(`["DYNAMIC","FORCED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vmDiskIoRestrictTypeEnum = append(vmDiskIoRestrictTypeEnum, v)
	}
}

func (m VMDiskIoRestrictType) validateVMDiskIoRestrictTypeEnum(path, location string, value VMDiskIoRestrictType) error {
	if err := validate.EnumCase(path, location, value, vmDiskIoRestrictTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Vm disk io restrict type
func (m VMDiskIoRestrictType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVMDiskIoRestrictTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this Vm disk io restrict type based on context it is used
func (m VMDiskIoRestrictType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
