// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetSnapshotPlansRequestBody get snapshot plans request body
// Example: {"after":"snapshotPlans-id-string","before":"snapshotPlans-id-string","first":0,"last":0,"orderBy":"auto_delete_num_ASC","skip":0,"where":{"AND":"SnapshotPlanWhereInput[]","NOT":"SnapshotPlanWhereInput[]","OR":"SnapshotPlanWhereInput[]","auto_delete_num":0,"auto_delete_num_gt":0,"auto_delete_num_gte":0,"auto_delete_num_in":[0],"auto_delete_num_lt":0,"auto_delete_num_lte":0,"auto_delete_num_not":0,"auto_delete_num_not_in":[0],"auto_execute_num":0,"auto_execute_num_gt":0,"auto_execute_num_gte":0,"auto_execute_num_in":[0],"auto_execute_num_lt":0,"auto_execute_num_lte":0,"auto_execute_num_not":0,"auto_execute_num_not_in":[0],"cluster":"ClusterWhereInput","description":"string","description_contains":"string","description_ends_with":"string","description_gt":"string","description_gte":"string","description_in":["string"],"description_lt":"string","description_lte":"string","description_not":"string","description_not_contains":"string","description_not_ends_with":"string","description_not_in":["string"],"description_not_starts_with":"string","description_starts_with":"string","end_time":"string","end_time_gt":"string","end_time_gte":"string","end_time_in":["string"],"end_time_lt":"string","end_time_lte":"string","end_time_not":"string","end_time_not_in":["string"],"entityAsyncStatus":"CREATING","entityAsyncStatus_in":["CREATING"],"entityAsyncStatus_not":"CREATING","entityAsyncStatus_not_in":["CREATING"],"execute_plan_type":"DAY","execute_plan_type_in":["DAY"],"execute_plan_type_not":"DAY","execute_plan_type_not_in":["DAY"],"execution_tasks_every":"SnapshotPlanTaskWhereInput","execution_tasks_none":"SnapshotPlanTaskWhereInput","execution_tasks_some":"SnapshotPlanTaskWhereInput","healthy":false,"healthy_not":false,"id":"string","id_contains":"string","id_ends_with":"string","id_gt":"string","id_gte":"string","id_in":["string"],"id_lt":"string","id_lte":"string","id_not":"string","id_not_contains":"string","id_not_ends_with":"string","id_not_in":["string"],"id_not_starts_with":"string","id_starts_with":"string","last_execute_end_time":"string","last_execute_end_time_gt":"string","last_execute_end_time_gte":"string","last_execute_end_time_in":["string"],"last_execute_end_time_lt":"string","last_execute_end_time_lte":"string","last_execute_end_time_not":"string","last_execute_end_time_not_in":["string"],"last_execute_status":"CREATED","last_execute_status_in":["CREATED"],"last_execute_status_not":"CREATED","last_execute_status_not_in":["CREATED"],"last_execute_time":"string","last_execute_time_gt":"string","last_execute_time_gte":"string","last_execute_time_in":["string"],"last_execute_time_lt":"string","last_execute_time_lte":"string","last_execute_time_not":"string","last_execute_time_not_in":["string"],"local_id":"string","local_id_contains":"string","local_id_ends_with":"string","local_id_gt":"string","local_id_gte":"string","local_id_in":["string"],"local_id_lt":"string","local_id_lte":"string","local_id_not":"string","local_id_not_contains":"string","local_id_not_ends_with":"string","local_id_not_in":["string"],"local_id_not_starts_with":"string","local_id_starts_with":"string","logical_size_bytes":0,"logical_size_bytes_gt":0,"logical_size_bytes_gte":0,"logical_size_bytes_in":[0],"logical_size_bytes_lt":0,"logical_size_bytes_lte":0,"logical_size_bytes_not":0,"logical_size_bytes_not_in":[0],"manual_delete_num":0,"manual_delete_num_gt":0,"manual_delete_num_gte":0,"manual_delete_num_in":[0],"manual_delete_num_lt":0,"manual_delete_num_lte":0,"manual_delete_num_not":0,"manual_delete_num_not_in":[0],"manual_execute_num":0,"manual_execute_num_gt":0,"manual_execute_num_gte":0,"manual_execute_num_in":[0],"manual_execute_num_lt":0,"manual_execute_num_lte":0,"manual_execute_num_not":0,"manual_execute_num_not_in":[0],"mirror":false,"mirror_not":false,"name":"string","name_contains":"string","name_ends_with":"string","name_gt":"string","name_gte":"string","name_in":["string"],"name_lt":"string","name_lte":"string","name_not":"string","name_not_contains":"string","name_not_ends_with":"string","name_not_in":["string"],"name_not_starts_with":"string","name_starts_with":"string","next_execute_time":"string","next_execute_time_gt":"string","next_execute_time_gte":"string","next_execute_time_in":["string"],"next_execute_time_lt":"string","next_execute_time_lte":"string","next_execute_time_not":"string","next_execute_time_not_in":["string"],"object_num":0,"object_num_gt":0,"object_num_gte":0,"object_num_in":[0],"object_num_lt":0,"object_num_lte":0,"object_num_not":0,"object_num_not_in":[0],"physical_size_bytes":0,"physical_size_bytes_gt":0,"physical_size_bytes_gte":0,"physical_size_bytes_in":[0],"physical_size_bytes_lt":0,"physical_size_bytes_lte":0,"physical_size_bytes_not":0,"physical_size_bytes_not_in":[0],"remain_snapshot_num":0,"remain_snapshot_num_gt":0,"remain_snapshot_num_gte":0,"remain_snapshot_num_in":[0],"remain_snapshot_num_lt":0,"remain_snapshot_num_lte":0,"remain_snapshot_num_not":0,"remain_snapshot_num_not_in":[0],"snapshot_group_num":0,"snapshot_group_num_gt":0,"snapshot_group_num_gte":0,"snapshot_group_num_in":[0],"snapshot_group_num_lt":0,"snapshot_group_num_lte":0,"snapshot_group_num_not":0,"snapshot_group_num_not_in":[0],"start_time":"string","start_time_gt":"string","start_time_gte":"string","start_time_in":["string"],"start_time_lt":"string","start_time_lte":"string","start_time_not":"string","start_time_not_in":["string"],"status":"NORMAL","status_in":["NORMAL"],"status_not":"NORMAL","status_not_in":["NORMAL"],"vms_every":"VmWhereInput","vms_none":"VmWhereInput","vms_some":"VmWhereInput"}}
//
// swagger:model GetSnapshotPlansRequestBody
type GetSnapshotPlansRequestBody struct {

	// after
	After *string `json:"after,omitempty"`

	// before
	Before *string `json:"before,omitempty"`

	// first
	First *int32 `json:"first,omitempty"`

	// last
	Last *int32 `json:"last,omitempty"`

	// order by
	OrderBy *SnapshotPlanOrderByInput `json:"orderBy,omitempty"`

	// skip
	Skip *int32 `json:"skip,omitempty"`

	// where
	Where *SnapshotPlanWhereInput `json:"where,omitempty"`
}

// Validate validates this get snapshot plans request body
func (m *GetSnapshotPlansRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrderBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWhere(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetSnapshotPlansRequestBody) validateOrderBy(formats strfmt.Registry) error {
	if swag.IsZero(m.OrderBy) { // not required
		return nil
	}

	if m.OrderBy != nil {
		if err := m.OrderBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("orderBy")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("orderBy")
			}
			return err
		}
	}

	return nil
}

func (m *GetSnapshotPlansRequestBody) validateWhere(formats strfmt.Registry) error {
	if swag.IsZero(m.Where) { // not required
		return nil
	}

	if m.Where != nil {
		if err := m.Where.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("where")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("where")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get snapshot plans request body based on the context it is used
func (m *GetSnapshotPlansRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOrderBy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateWhere(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetSnapshotPlansRequestBody) contextValidateOrderBy(ctx context.Context, formats strfmt.Registry) error {

	if m.OrderBy != nil {
		if err := m.OrderBy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("orderBy")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("orderBy")
			}
			return err
		}
	}

	return nil
}

func (m *GetSnapshotPlansRequestBody) contextValidateWhere(ctx context.Context, formats strfmt.Registry) error {

	if m.Where != nil {
		if err := m.Where.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("where")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("where")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetSnapshotPlansRequestBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetSnapshotPlansRequestBody) UnmarshalBinary(b []byte) error {
	var res GetSnapshotPlansRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
