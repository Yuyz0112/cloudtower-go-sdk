// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HostWhereInput host where input
//
// swagger:model HostWhereInput
type HostWhereInput struct {

	// a n d
	AND []*HostWhereInput `json:"AND,omitempty"`

	// n o t
	NOT []*HostWhereInput `json:"NOT,omitempty"`

	// o r
	OR []*HostWhereInput `json:"OR,omitempty"`

	// access ip
	AccessIP *string `json:"access_ip,omitempty"`

	// access ip contains
	AccessIPContains *string `json:"access_ip_contains,omitempty"`

	// access ip ends with
	AccessIPEndsWith *string `json:"access_ip_ends_with,omitempty"`

	// access ip gt
	AccessIPGt *string `json:"access_ip_gt,omitempty"`

	// access ip gte
	AccessIPGte *string `json:"access_ip_gte,omitempty"`

	// access ip in
	AccessIPIn []string `json:"access_ip_in,omitempty"`

	// access ip lt
	AccessIPLt *string `json:"access_ip_lt,omitempty"`

	// access ip lte
	AccessIPLte *string `json:"access_ip_lte,omitempty"`

	// access ip not
	AccessIPNot *string `json:"access_ip_not,omitempty"`

	// access ip not contains
	AccessIPNotContains *string `json:"access_ip_not_contains,omitempty"`

	// access ip not ends with
	AccessIPNotEndsWith *string `json:"access_ip_not_ends_with,omitempty"`

	// access ip not in
	AccessIPNotIn []string `json:"access_ip_not_in,omitempty"`

	// access ip not starts with
	AccessIPNotStartsWith *string `json:"access_ip_not_starts_with,omitempty"`

	// access ip starts with
	AccessIPStartsWith *string `json:"access_ip_starts_with,omitempty"`

	// allocatable memory bytes
	AllocatableMemoryBytes *float64 `json:"allocatable_memory_bytes,omitempty"`

	// allocatable memory bytes gt
	AllocatableMemoryBytesGt *float64 `json:"allocatable_memory_bytes_gt,omitempty"`

	// allocatable memory bytes gte
	AllocatableMemoryBytesGte *float64 `json:"allocatable_memory_bytes_gte,omitempty"`

	// allocatable memory bytes in
	AllocatableMemoryBytesIn []float64 `json:"allocatable_memory_bytes_in,omitempty"`

	// allocatable memory bytes lt
	AllocatableMemoryBytesLt *float64 `json:"allocatable_memory_bytes_lt,omitempty"`

	// allocatable memory bytes lte
	AllocatableMemoryBytesLte *float64 `json:"allocatable_memory_bytes_lte,omitempty"`

	// allocatable memory bytes not
	AllocatableMemoryBytesNot *float64 `json:"allocatable_memory_bytes_not,omitempty"`

	// allocatable memory bytes not in
	AllocatableMemoryBytesNotIn []float64 `json:"allocatable_memory_bytes_not_in,omitempty"`

	// chunk id
	ChunkID *string `json:"chunk_id,omitempty"`

	// chunk id contains
	ChunkIDContains *string `json:"chunk_id_contains,omitempty"`

	// chunk id ends with
	ChunkIDEndsWith *string `json:"chunk_id_ends_with,omitempty"`

	// chunk id gt
	ChunkIDGt *string `json:"chunk_id_gt,omitempty"`

	// chunk id gte
	ChunkIDGte *string `json:"chunk_id_gte,omitempty"`

	// chunk id in
	ChunkIDIn []string `json:"chunk_id_in,omitempty"`

	// chunk id lt
	ChunkIDLt *string `json:"chunk_id_lt,omitempty"`

	// chunk id lte
	ChunkIDLte *string `json:"chunk_id_lte,omitempty"`

	// chunk id not
	ChunkIDNot *string `json:"chunk_id_not,omitempty"`

	// chunk id not contains
	ChunkIDNotContains *string `json:"chunk_id_not_contains,omitempty"`

	// chunk id not ends with
	ChunkIDNotEndsWith *string `json:"chunk_id_not_ends_with,omitempty"`

	// chunk id not in
	ChunkIDNotIn []string `json:"chunk_id_not_in,omitempty"`

	// chunk id not starts with
	ChunkIDNotStartsWith *string `json:"chunk_id_not_starts_with,omitempty"`

	// chunk id starts with
	ChunkIDStartsWith *string `json:"chunk_id_starts_with,omitempty"`

	// cluster
	Cluster interface{} `json:"cluster,omitempty"`

	// cpu brand
	CPUBrand *string `json:"cpu_brand,omitempty"`

	// cpu brand contains
	CPUBrandContains *string `json:"cpu_brand_contains,omitempty"`

	// cpu brand ends with
	CPUBrandEndsWith *string `json:"cpu_brand_ends_with,omitempty"`

	// cpu brand gt
	CPUBrandGt *string `json:"cpu_brand_gt,omitempty"`

	// cpu brand gte
	CPUBrandGte *string `json:"cpu_brand_gte,omitempty"`

	// cpu brand in
	CPUBrandIn []string `json:"cpu_brand_in,omitempty"`

	// cpu brand lt
	CPUBrandLt *string `json:"cpu_brand_lt,omitempty"`

	// cpu brand lte
	CPUBrandLte *string `json:"cpu_brand_lte,omitempty"`

	// cpu brand not
	CPUBrandNot *string `json:"cpu_brand_not,omitempty"`

	// cpu brand not contains
	CPUBrandNotContains *string `json:"cpu_brand_not_contains,omitempty"`

	// cpu brand not ends with
	CPUBrandNotEndsWith *string `json:"cpu_brand_not_ends_with,omitempty"`

	// cpu brand not in
	CPUBrandNotIn []string `json:"cpu_brand_not_in,omitempty"`

	// cpu brand not starts with
	CPUBrandNotStartsWith *string `json:"cpu_brand_not_starts_with,omitempty"`

	// cpu brand starts with
	CPUBrandStartsWith *string `json:"cpu_brand_starts_with,omitempty"`

	// cpu fan speed unit
	CPUFanSpeedUnit interface{} `json:"cpu_fan_speed_unit,omitempty"`

	// cpu fan speed unit in
	CPUFanSpeedUnitIn []CPUFanSpeedUnit `json:"cpu_fan_speed_unit_in,omitempty"`

	// cpu fan speed unit not
	CPUFanSpeedUnitNot interface{} `json:"cpu_fan_speed_unit_not,omitempty"`

	// cpu fan speed unit not in
	CPUFanSpeedUnitNotIn []CPUFanSpeedUnit `json:"cpu_fan_speed_unit_not_in,omitempty"`

	// cpu hz per core
	CPUHzPerCore *float64 `json:"cpu_hz_per_core,omitempty"`

	// cpu hz per core gt
	CPUHzPerCoreGt *float64 `json:"cpu_hz_per_core_gt,omitempty"`

	// cpu hz per core gte
	CPUHzPerCoreGte *float64 `json:"cpu_hz_per_core_gte,omitempty"`

	// cpu hz per core in
	CPUHzPerCoreIn []float64 `json:"cpu_hz_per_core_in,omitempty"`

	// cpu hz per core lt
	CPUHzPerCoreLt *float64 `json:"cpu_hz_per_core_lt,omitempty"`

	// cpu hz per core lte
	CPUHzPerCoreLte *float64 `json:"cpu_hz_per_core_lte,omitempty"`

	// cpu hz per core not
	CPUHzPerCoreNot *float64 `json:"cpu_hz_per_core_not,omitempty"`

	// cpu hz per core not in
	CPUHzPerCoreNotIn []float64 `json:"cpu_hz_per_core_not_in,omitempty"`

	// cpu model
	CPUModel *string `json:"cpu_model,omitempty"`

	// cpu model contains
	CPUModelContains *string `json:"cpu_model_contains,omitempty"`

	// cpu model ends with
	CPUModelEndsWith *string `json:"cpu_model_ends_with,omitempty"`

	// cpu model gt
	CPUModelGt *string `json:"cpu_model_gt,omitempty"`

	// cpu model gte
	CPUModelGte *string `json:"cpu_model_gte,omitempty"`

	// cpu model in
	CPUModelIn []string `json:"cpu_model_in,omitempty"`

	// cpu model lt
	CPUModelLt *string `json:"cpu_model_lt,omitempty"`

	// cpu model lte
	CPUModelLte *string `json:"cpu_model_lte,omitempty"`

	// cpu model not
	CPUModelNot *string `json:"cpu_model_not,omitempty"`

	// cpu model not contains
	CPUModelNotContains *string `json:"cpu_model_not_contains,omitempty"`

	// cpu model not ends with
	CPUModelNotEndsWith *string `json:"cpu_model_not_ends_with,omitempty"`

	// cpu model not in
	CPUModelNotIn []string `json:"cpu_model_not_in,omitempty"`

	// cpu model not starts with
	CPUModelNotStartsWith *string `json:"cpu_model_not_starts_with,omitempty"`

	// cpu model starts with
	CPUModelStartsWith *string `json:"cpu_model_starts_with,omitempty"`

	// data ip
	DataIP *string `json:"data_ip,omitempty"`

	// data ip contains
	DataIPContains *string `json:"data_ip_contains,omitempty"`

	// data ip ends with
	DataIPEndsWith *string `json:"data_ip_ends_with,omitempty"`

	// data ip gt
	DataIPGt *string `json:"data_ip_gt,omitempty"`

	// data ip gte
	DataIPGte *string `json:"data_ip_gte,omitempty"`

	// data ip in
	DataIPIn []string `json:"data_ip_in,omitempty"`

	// data ip lt
	DataIPLt *string `json:"data_ip_lt,omitempty"`

	// data ip lte
	DataIPLte *string `json:"data_ip_lte,omitempty"`

	// data ip not
	DataIPNot *string `json:"data_ip_not,omitempty"`

	// data ip not contains
	DataIPNotContains *string `json:"data_ip_not_contains,omitempty"`

	// data ip not ends with
	DataIPNotEndsWith *string `json:"data_ip_not_ends_with,omitempty"`

	// data ip not in
	DataIPNotIn []string `json:"data_ip_not_in,omitempty"`

	// data ip not starts with
	DataIPNotStartsWith *string `json:"data_ip_not_starts_with,omitempty"`

	// data ip starts with
	DataIPStartsWith *string `json:"data_ip_starts_with,omitempty"`

	// disks every
	DisksEvery interface{} `json:"disks_every,omitempty"`

	// disks none
	DisksNone interface{} `json:"disks_none,omitempty"`

	// disks some
	DisksSome interface{} `json:"disks_some,omitempty"`

	// failure data space
	FailureDataSpace *float64 `json:"failure_data_space,omitempty"`

	// failure data space gt
	FailureDataSpaceGt *float64 `json:"failure_data_space_gt,omitempty"`

	// failure data space gte
	FailureDataSpaceGte *float64 `json:"failure_data_space_gte,omitempty"`

	// failure data space in
	FailureDataSpaceIn []float64 `json:"failure_data_space_in,omitempty"`

	// failure data space lt
	FailureDataSpaceLt *float64 `json:"failure_data_space_lt,omitempty"`

	// failure data space lte
	FailureDataSpaceLte *float64 `json:"failure_data_space_lte,omitempty"`

	// failure data space not
	FailureDataSpaceNot *float64 `json:"failure_data_space_not,omitempty"`

	// failure data space not in
	FailureDataSpaceNotIn []float64 `json:"failure_data_space_not_in,omitempty"`

	// hdd data capacity
	HddDataCapacity *float64 `json:"hdd_data_capacity,omitempty"`

	// hdd data capacity gt
	HddDataCapacityGt *float64 `json:"hdd_data_capacity_gt,omitempty"`

	// hdd data capacity gte
	HddDataCapacityGte *float64 `json:"hdd_data_capacity_gte,omitempty"`

	// hdd data capacity in
	HddDataCapacityIn []float64 `json:"hdd_data_capacity_in,omitempty"`

	// hdd data capacity lt
	HddDataCapacityLt *float64 `json:"hdd_data_capacity_lt,omitempty"`

	// hdd data capacity lte
	HddDataCapacityLte *float64 `json:"hdd_data_capacity_lte,omitempty"`

	// hdd data capacity not
	HddDataCapacityNot *float64 `json:"hdd_data_capacity_not,omitempty"`

	// hdd data capacity not in
	HddDataCapacityNotIn []float64 `json:"hdd_data_capacity_not_in,omitempty"`

	// hdd disk count
	HddDiskCount *float64 `json:"hdd_disk_count,omitempty"`

	// hdd disk count gt
	HddDiskCountGt *float64 `json:"hdd_disk_count_gt,omitempty"`

	// hdd disk count gte
	HddDiskCountGte *float64 `json:"hdd_disk_count_gte,omitempty"`

	// hdd disk count in
	HddDiskCountIn []float64 `json:"hdd_disk_count_in,omitempty"`

	// hdd disk count lt
	HddDiskCountLt *float64 `json:"hdd_disk_count_lt,omitempty"`

	// hdd disk count lte
	HddDiskCountLte *float64 `json:"hdd_disk_count_lte,omitempty"`

	// hdd disk count not
	HddDiskCountNot *float64 `json:"hdd_disk_count_not,omitempty"`

	// hdd disk count not in
	HddDiskCountNotIn []float64 `json:"hdd_disk_count_not_in,omitempty"`

	// id
	ID *string `json:"id,omitempty"`

	// id contains
	IDContains *string `json:"id_contains,omitempty"`

	// id ends with
	IDEndsWith *string `json:"id_ends_with,omitempty"`

	// id gt
	IDGt *string `json:"id_gt,omitempty"`

	// id gte
	IDGte *string `json:"id_gte,omitempty"`

	// id in
	IDIn []string `json:"id_in,omitempty"`

	// id lt
	IDLt *string `json:"id_lt,omitempty"`

	// id lte
	IDLte *string `json:"id_lte,omitempty"`

	// id not
	IDNot *string `json:"id_not,omitempty"`

	// id not contains
	IDNotContains *string `json:"id_not_contains,omitempty"`

	// id not ends with
	IDNotEndsWith *string `json:"id_not_ends_with,omitempty"`

	// id not in
	IDNotIn []string `json:"id_not_in,omitempty"`

	// id not starts with
	IDNotStartsWith *string `json:"id_not_starts_with,omitempty"`

	// id starts with
	IDStartsWith *string `json:"id_starts_with,omitempty"`

	// ipmi
	Ipmi interface{} `json:"ipmi,omitempty"`

	// is os in raid1
	IsOsInRaid1 *bool `json:"is_os_in_raid1,omitempty"`

	// is os in raid1 not
	IsOsInRaid1Not *bool `json:"is_os_in_raid1_not,omitempty"`

	// labels every
	LabelsEvery interface{} `json:"labels_every,omitempty"`

	// labels none
	LabelsNone interface{} `json:"labels_none,omitempty"`

	// labels some
	LabelsSome interface{} `json:"labels_some,omitempty"`

	// local id
	LocalID *string `json:"local_id,omitempty"`

	// local id contains
	LocalIDContains *string `json:"local_id_contains,omitempty"`

	// local id ends with
	LocalIDEndsWith *string `json:"local_id_ends_with,omitempty"`

	// local id gt
	LocalIDGt *string `json:"local_id_gt,omitempty"`

	// local id gte
	LocalIDGte *string `json:"local_id_gte,omitempty"`

	// local id in
	LocalIDIn []string `json:"local_id_in,omitempty"`

	// local id lt
	LocalIDLt *string `json:"local_id_lt,omitempty"`

	// local id lte
	LocalIDLte *string `json:"local_id_lte,omitempty"`

	// local id not
	LocalIDNot *string `json:"local_id_not,omitempty"`

	// local id not contains
	LocalIDNotContains *string `json:"local_id_not_contains,omitempty"`

	// local id not ends with
	LocalIDNotEndsWith *string `json:"local_id_not_ends_with,omitempty"`

	// local id not in
	LocalIDNotIn []string `json:"local_id_not_in,omitempty"`

	// local id not starts with
	LocalIDNotStartsWith *string `json:"local_id_not_starts_with,omitempty"`

	// local id starts with
	LocalIDStartsWith *string `json:"local_id_starts_with,omitempty"`

	// lsm cap disk safe umount
	LsmCapDiskSafeUmount *bool `json:"lsm_cap_disk_safe_umount,omitempty"`

	// lsm cap disk safe umount not
	LsmCapDiskSafeUmountNot *bool `json:"lsm_cap_disk_safe_umount_not,omitempty"`

	// management ip
	ManagementIP *string `json:"management_ip,omitempty"`

	// management ip contains
	ManagementIPContains *string `json:"management_ip_contains,omitempty"`

	// management ip ends with
	ManagementIPEndsWith *string `json:"management_ip_ends_with,omitempty"`

	// management ip gt
	ManagementIPGt *string `json:"management_ip_gt,omitempty"`

	// management ip gte
	ManagementIPGte *string `json:"management_ip_gte,omitempty"`

	// management ip in
	ManagementIPIn []string `json:"management_ip_in,omitempty"`

	// management ip lt
	ManagementIPLt *string `json:"management_ip_lt,omitempty"`

	// management ip lte
	ManagementIPLte *string `json:"management_ip_lte,omitempty"`

	// management ip not
	ManagementIPNot *string `json:"management_ip_not,omitempty"`

	// management ip not contains
	ManagementIPNotContains *string `json:"management_ip_not_contains,omitempty"`

	// management ip not ends with
	ManagementIPNotEndsWith *string `json:"management_ip_not_ends_with,omitempty"`

	// management ip not in
	ManagementIPNotIn []string `json:"management_ip_not_in,omitempty"`

	// management ip not starts with
	ManagementIPNotStartsWith *string `json:"management_ip_not_starts_with,omitempty"`

	// management ip starts with
	ManagementIPStartsWith *string `json:"management_ip_starts_with,omitempty"`

	// model
	Model *string `json:"model,omitempty"`

	// model contains
	ModelContains *string `json:"model_contains,omitempty"`

	// model ends with
	ModelEndsWith *string `json:"model_ends_with,omitempty"`

	// model gt
	ModelGt *string `json:"model_gt,omitempty"`

	// model gte
	ModelGte *string `json:"model_gte,omitempty"`

	// model in
	ModelIn []string `json:"model_in,omitempty"`

	// model lt
	ModelLt *string `json:"model_lt,omitempty"`

	// model lte
	ModelLte *string `json:"model_lte,omitempty"`

	// model not
	ModelNot *string `json:"model_not,omitempty"`

	// model not contains
	ModelNotContains *string `json:"model_not_contains,omitempty"`

	// model not ends with
	ModelNotEndsWith *string `json:"model_not_ends_with,omitempty"`

	// model not in
	ModelNotIn []string `json:"model_not_in,omitempty"`

	// model not starts with
	ModelNotStartsWith *string `json:"model_not_starts_with,omitempty"`

	// model starts with
	ModelStartsWith *string `json:"model_starts_with,omitempty"`

	// name
	Name *string `json:"name,omitempty"`

	// name contains
	NameContains *string `json:"name_contains,omitempty"`

	// name ends with
	NameEndsWith *string `json:"name_ends_with,omitempty"`

	// name gt
	NameGt *string `json:"name_gt,omitempty"`

	// name gte
	NameGte *string `json:"name_gte,omitempty"`

	// name in
	NameIn []string `json:"name_in,omitempty"`

	// name lt
	NameLt *string `json:"name_lt,omitempty"`

	// name lte
	NameLte *string `json:"name_lte,omitempty"`

	// name not
	NameNot *string `json:"name_not,omitempty"`

	// name not contains
	NameNotContains *string `json:"name_not_contains,omitempty"`

	// name not ends with
	NameNotEndsWith *string `json:"name_not_ends_with,omitempty"`

	// name not in
	NameNotIn []string `json:"name_not_in,omitempty"`

	// name not starts with
	NameNotStartsWith *string `json:"name_not_starts_with,omitempty"`

	// name starts with
	NameStartsWith *string `json:"name_starts_with,omitempty"`

	// nested virtualization
	NestedVirtualization *bool `json:"nested_virtualization,omitempty"`

	// nested virtualization not
	NestedVirtualizationNot *bool `json:"nested_virtualization_not,omitempty"`

	// nic count
	NicCount *float64 `json:"nic_count,omitempty"`

	// nic count gt
	NicCountGt *float64 `json:"nic_count_gt,omitempty"`

	// nic count gte
	NicCountGte *float64 `json:"nic_count_gte,omitempty"`

	// nic count in
	NicCountIn []float64 `json:"nic_count_in,omitempty"`

	// nic count lt
	NicCountLt *float64 `json:"nic_count_lt,omitempty"`

	// nic count lte
	NicCountLte *float64 `json:"nic_count_lte,omitempty"`

	// nic count not
	NicCountNot *float64 `json:"nic_count_not,omitempty"`

	// nic count not in
	NicCountNotIn []float64 `json:"nic_count_not_in,omitempty"`

	// nics every
	NicsEvery interface{} `json:"nics_every,omitempty"`

	// nics none
	NicsNone interface{} `json:"nics_none,omitempty"`

	// nics some
	NicsSome interface{} `json:"nics_some,omitempty"`

	// node topo local id
	NodeTopoLocalID *string `json:"node_topo_local_id,omitempty"`

	// node topo local id contains
	NodeTopoLocalIDContains *string `json:"node_topo_local_id_contains,omitempty"`

	// node topo local id ends with
	NodeTopoLocalIDEndsWith *string `json:"node_topo_local_id_ends_with,omitempty"`

	// node topo local id gt
	NodeTopoLocalIDGt *string `json:"node_topo_local_id_gt,omitempty"`

	// node topo local id gte
	NodeTopoLocalIDGte *string `json:"node_topo_local_id_gte,omitempty"`

	// node topo local id in
	NodeTopoLocalIDIn []string `json:"node_topo_local_id_in,omitempty"`

	// node topo local id lt
	NodeTopoLocalIDLt *string `json:"node_topo_local_id_lt,omitempty"`

	// node topo local id lte
	NodeTopoLocalIDLte *string `json:"node_topo_local_id_lte,omitempty"`

	// node topo local id not
	NodeTopoLocalIDNot *string `json:"node_topo_local_id_not,omitempty"`

	// node topo local id not contains
	NodeTopoLocalIDNotContains *string `json:"node_topo_local_id_not_contains,omitempty"`

	// node topo local id not ends with
	NodeTopoLocalIDNotEndsWith *string `json:"node_topo_local_id_not_ends_with,omitempty"`

	// node topo local id not in
	NodeTopoLocalIDNotIn []string `json:"node_topo_local_id_not_in,omitempty"`

	// node topo local id not starts with
	NodeTopoLocalIDNotStartsWith *string `json:"node_topo_local_id_not_starts_with,omitempty"`

	// node topo local id starts with
	NodeTopoLocalIDStartsWith *string `json:"node_topo_local_id_starts_with,omitempty"`

	// os memory bytes
	OsMemoryBytes *float64 `json:"os_memory_bytes,omitempty"`

	// os memory bytes gt
	OsMemoryBytesGt *float64 `json:"os_memory_bytes_gt,omitempty"`

	// os memory bytes gte
	OsMemoryBytesGte *float64 `json:"os_memory_bytes_gte,omitempty"`

	// os memory bytes in
	OsMemoryBytesIn []float64 `json:"os_memory_bytes_in,omitempty"`

	// os memory bytes lt
	OsMemoryBytesLt *float64 `json:"os_memory_bytes_lt,omitempty"`

	// os memory bytes lte
	OsMemoryBytesLte *float64 `json:"os_memory_bytes_lte,omitempty"`

	// os memory bytes not
	OsMemoryBytesNot *float64 `json:"os_memory_bytes_not,omitempty"`

	// os memory bytes not in
	OsMemoryBytesNotIn []float64 `json:"os_memory_bytes_not_in,omitempty"`

	// os version
	OsVersion *string `json:"os_version,omitempty"`

	// os version contains
	OsVersionContains *string `json:"os_version_contains,omitempty"`

	// os version ends with
	OsVersionEndsWith *string `json:"os_version_ends_with,omitempty"`

	// os version gt
	OsVersionGt *string `json:"os_version_gt,omitempty"`

	// os version gte
	OsVersionGte *string `json:"os_version_gte,omitempty"`

	// os version in
	OsVersionIn []string `json:"os_version_in,omitempty"`

	// os version lt
	OsVersionLt *string `json:"os_version_lt,omitempty"`

	// os version lte
	OsVersionLte *string `json:"os_version_lte,omitempty"`

	// os version not
	OsVersionNot *string `json:"os_version_not,omitempty"`

	// os version not contains
	OsVersionNotContains *string `json:"os_version_not_contains,omitempty"`

	// os version not ends with
	OsVersionNotEndsWith *string `json:"os_version_not_ends_with,omitempty"`

	// os version not in
	OsVersionNotIn []string `json:"os_version_not_in,omitempty"`

	// os version not starts with
	OsVersionNotStartsWith *string `json:"os_version_not_starts_with,omitempty"`

	// os version starts with
	OsVersionStartsWith *string `json:"os_version_starts_with,omitempty"`

	// pmem dimm capacity
	PmemDimmCapacity *float64 `json:"pmem_dimm_capacity,omitempty"`

	// pmem dimm capacity gt
	PmemDimmCapacityGt *float64 `json:"pmem_dimm_capacity_gt,omitempty"`

	// pmem dimm capacity gte
	PmemDimmCapacityGte *float64 `json:"pmem_dimm_capacity_gte,omitempty"`

	// pmem dimm capacity in
	PmemDimmCapacityIn []float64 `json:"pmem_dimm_capacity_in,omitempty"`

	// pmem dimm capacity lt
	PmemDimmCapacityLt *float64 `json:"pmem_dimm_capacity_lt,omitempty"`

	// pmem dimm capacity lte
	PmemDimmCapacityLte *float64 `json:"pmem_dimm_capacity_lte,omitempty"`

	// pmem dimm capacity not
	PmemDimmCapacityNot *float64 `json:"pmem_dimm_capacity_not,omitempty"`

	// pmem dimm capacity not in
	PmemDimmCapacityNotIn []float64 `json:"pmem_dimm_capacity_not_in,omitempty"`

	// pmem dimm count
	PmemDimmCount *float64 `json:"pmem_dimm_count,omitempty"`

	// pmem dimm count gt
	PmemDimmCountGt *float64 `json:"pmem_dimm_count_gt,omitempty"`

	// pmem dimm count gte
	PmemDimmCountGte *float64 `json:"pmem_dimm_count_gte,omitempty"`

	// pmem dimm count in
	PmemDimmCountIn []float64 `json:"pmem_dimm_count_in,omitempty"`

	// pmem dimm count lt
	PmemDimmCountLt *float64 `json:"pmem_dimm_count_lt,omitempty"`

	// pmem dimm count lte
	PmemDimmCountLte *float64 `json:"pmem_dimm_count_lte,omitempty"`

	// pmem dimm count not
	PmemDimmCountNot *float64 `json:"pmem_dimm_count_not,omitempty"`

	// pmem dimm count not in
	PmemDimmCountNotIn []float64 `json:"pmem_dimm_count_not_in,omitempty"`

	// pmem dimms every
	PmemDimmsEvery interface{} `json:"pmem_dimms_every,omitempty"`

	// pmem dimms none
	PmemDimmsNone interface{} `json:"pmem_dimms_none,omitempty"`

	// pmem dimms some
	PmemDimmsSome interface{} `json:"pmem_dimms_some,omitempty"`

	// pmem disk count
	PmemDiskCount *float64 `json:"pmem_disk_count,omitempty"`

	// pmem disk count gt
	PmemDiskCountGt *float64 `json:"pmem_disk_count_gt,omitempty"`

	// pmem disk count gte
	PmemDiskCountGte *float64 `json:"pmem_disk_count_gte,omitempty"`

	// pmem disk count in
	PmemDiskCountIn []float64 `json:"pmem_disk_count_in,omitempty"`

	// pmem disk count lt
	PmemDiskCountLt *float64 `json:"pmem_disk_count_lt,omitempty"`

	// pmem disk count lte
	PmemDiskCountLte *float64 `json:"pmem_disk_count_lte,omitempty"`

	// pmem disk count not
	PmemDiskCountNot *float64 `json:"pmem_disk_count_not,omitempty"`

	// pmem disk count not in
	PmemDiskCountNotIn []float64 `json:"pmem_disk_count_not_in,omitempty"`

	// provisioned cpu cores
	ProvisionedCPUCores *float64 `json:"provisioned_cpu_cores,omitempty"`

	// provisioned cpu cores gt
	ProvisionedCPUCoresGt *float64 `json:"provisioned_cpu_cores_gt,omitempty"`

	// provisioned cpu cores gte
	ProvisionedCPUCoresGte *float64 `json:"provisioned_cpu_cores_gte,omitempty"`

	// provisioned cpu cores in
	ProvisionedCPUCoresIn []float64 `json:"provisioned_cpu_cores_in,omitempty"`

	// provisioned cpu cores lt
	ProvisionedCPUCoresLt *float64 `json:"provisioned_cpu_cores_lt,omitempty"`

	// provisioned cpu cores lte
	ProvisionedCPUCoresLte *float64 `json:"provisioned_cpu_cores_lte,omitempty"`

	// provisioned cpu cores not
	ProvisionedCPUCoresNot *float64 `json:"provisioned_cpu_cores_not,omitempty"`

	// provisioned cpu cores not in
	ProvisionedCPUCoresNotIn []float64 `json:"provisioned_cpu_cores_not_in,omitempty"`

	// provisioned memory bytes
	ProvisionedMemoryBytes *float64 `json:"provisioned_memory_bytes,omitempty"`

	// provisioned memory bytes gt
	ProvisionedMemoryBytesGt *float64 `json:"provisioned_memory_bytes_gt,omitempty"`

	// provisioned memory bytes gte
	ProvisionedMemoryBytesGte *float64 `json:"provisioned_memory_bytes_gte,omitempty"`

	// provisioned memory bytes in
	ProvisionedMemoryBytesIn []float64 `json:"provisioned_memory_bytes_in,omitempty"`

	// provisioned memory bytes lt
	ProvisionedMemoryBytesLt *float64 `json:"provisioned_memory_bytes_lt,omitempty"`

	// provisioned memory bytes lte
	ProvisionedMemoryBytesLte *float64 `json:"provisioned_memory_bytes_lte,omitempty"`

	// provisioned memory bytes not
	ProvisionedMemoryBytesNot *float64 `json:"provisioned_memory_bytes_not,omitempty"`

	// provisioned memory bytes not in
	ProvisionedMemoryBytesNotIn []float64 `json:"provisioned_memory_bytes_not_in,omitempty"`

	// running pause vm memory bytes
	RunningPauseVMMemoryBytes *float64 `json:"running_pause_vm_memory_bytes,omitempty"`

	// running pause vm memory bytes gt
	RunningPauseVMMemoryBytesGt *float64 `json:"running_pause_vm_memory_bytes_gt,omitempty"`

	// running pause vm memory bytes gte
	RunningPauseVMMemoryBytesGte *float64 `json:"running_pause_vm_memory_bytes_gte,omitempty"`

	// running pause vm memory bytes in
	RunningPauseVMMemoryBytesIn []float64 `json:"running_pause_vm_memory_bytes_in,omitempty"`

	// running pause vm memory bytes lt
	RunningPauseVMMemoryBytesLt *float64 `json:"running_pause_vm_memory_bytes_lt,omitempty"`

	// running pause vm memory bytes lte
	RunningPauseVMMemoryBytesLte *float64 `json:"running_pause_vm_memory_bytes_lte,omitempty"`

	// running pause vm memory bytes not
	RunningPauseVMMemoryBytesNot *float64 `json:"running_pause_vm_memory_bytes_not,omitempty"`

	// running pause vm memory bytes not in
	RunningPauseVMMemoryBytesNotIn []float64 `json:"running_pause_vm_memory_bytes_not_in,omitempty"`

	// running vm num
	RunningVMNum *float64 `json:"running_vm_num,omitempty"`

	// running vm num gt
	RunningVMNumGt *float64 `json:"running_vm_num_gt,omitempty"`

	// running vm num gte
	RunningVMNumGte *float64 `json:"running_vm_num_gte,omitempty"`

	// running vm num in
	RunningVMNumIn []float64 `json:"running_vm_num_in,omitempty"`

	// running vm num lt
	RunningVMNumLt *float64 `json:"running_vm_num_lt,omitempty"`

	// running vm num lte
	RunningVMNumLte *float64 `json:"running_vm_num_lte,omitempty"`

	// running vm num not
	RunningVMNumNot *float64 `json:"running_vm_num_not,omitempty"`

	// running vm num not in
	RunningVMNumNotIn []float64 `json:"running_vm_num_not_in,omitempty"`

	// scvm cpu
	ScvmCPU *float64 `json:"scvm_cpu,omitempty"`

	// scvm cpu gt
	ScvmCPUGt *float64 `json:"scvm_cpu_gt,omitempty"`

	// scvm cpu gte
	ScvmCPUGte *float64 `json:"scvm_cpu_gte,omitempty"`

	// scvm cpu in
	ScvmCPUIn []float64 `json:"scvm_cpu_in,omitempty"`

	// scvm cpu lt
	ScvmCPULt *float64 `json:"scvm_cpu_lt,omitempty"`

	// scvm cpu lte
	ScvmCPULte *float64 `json:"scvm_cpu_lte,omitempty"`

	// scvm cpu not
	ScvmCPUNot *float64 `json:"scvm_cpu_not,omitempty"`

	// scvm cpu not in
	ScvmCPUNotIn []float64 `json:"scvm_cpu_not_in,omitempty"`

	// scvm memory
	ScvmMemory *float64 `json:"scvm_memory,omitempty"`

	// scvm memory gt
	ScvmMemoryGt *float64 `json:"scvm_memory_gt,omitempty"`

	// scvm memory gte
	ScvmMemoryGte *float64 `json:"scvm_memory_gte,omitempty"`

	// scvm memory in
	ScvmMemoryIn []float64 `json:"scvm_memory_in,omitempty"`

	// scvm memory lt
	ScvmMemoryLt *float64 `json:"scvm_memory_lt,omitempty"`

	// scvm memory lte
	ScvmMemoryLte *float64 `json:"scvm_memory_lte,omitempty"`

	// scvm memory not
	ScvmMemoryNot *float64 `json:"scvm_memory_not,omitempty"`

	// scvm memory not in
	ScvmMemoryNotIn []float64 `json:"scvm_memory_not_in,omitempty"`

	// scvm name
	ScvmName *string `json:"scvm_name,omitempty"`

	// scvm name contains
	ScvmNameContains *string `json:"scvm_name_contains,omitempty"`

	// scvm name ends with
	ScvmNameEndsWith *string `json:"scvm_name_ends_with,omitempty"`

	// scvm name gt
	ScvmNameGt *string `json:"scvm_name_gt,omitempty"`

	// scvm name gte
	ScvmNameGte *string `json:"scvm_name_gte,omitempty"`

	// scvm name in
	ScvmNameIn []string `json:"scvm_name_in,omitempty"`

	// scvm name lt
	ScvmNameLt *string `json:"scvm_name_lt,omitempty"`

	// scvm name lte
	ScvmNameLte *string `json:"scvm_name_lte,omitempty"`

	// scvm name not
	ScvmNameNot *string `json:"scvm_name_not,omitempty"`

	// scvm name not contains
	ScvmNameNotContains *string `json:"scvm_name_not_contains,omitempty"`

	// scvm name not ends with
	ScvmNameNotEndsWith *string `json:"scvm_name_not_ends_with,omitempty"`

	// scvm name not in
	ScvmNameNotIn []string `json:"scvm_name_not_in,omitempty"`

	// scvm name not starts with
	ScvmNameNotStartsWith *string `json:"scvm_name_not_starts_with,omitempty"`

	// scvm name starts with
	ScvmNameStartsWith *string `json:"scvm_name_starts_with,omitempty"`

	// serial
	Serial *string `json:"serial,omitempty"`

	// serial contains
	SerialContains *string `json:"serial_contains,omitempty"`

	// serial ends with
	SerialEndsWith *string `json:"serial_ends_with,omitempty"`

	// serial gt
	SerialGt *string `json:"serial_gt,omitempty"`

	// serial gte
	SerialGte *string `json:"serial_gte,omitempty"`

	// serial in
	SerialIn []string `json:"serial_in,omitempty"`

	// serial lt
	SerialLt *string `json:"serial_lt,omitempty"`

	// serial lte
	SerialLte *string `json:"serial_lte,omitempty"`

	// serial not
	SerialNot *string `json:"serial_not,omitempty"`

	// serial not contains
	SerialNotContains *string `json:"serial_not_contains,omitempty"`

	// serial not ends with
	SerialNotEndsWith *string `json:"serial_not_ends_with,omitempty"`

	// serial not in
	SerialNotIn []string `json:"serial_not_in,omitempty"`

	// serial not starts with
	SerialNotStartsWith *string `json:"serial_not_starts_with,omitempty"`

	// serial starts with
	SerialStartsWith *string `json:"serial_starts_with,omitempty"`

	// ssd data capacity
	SsdDataCapacity *float64 `json:"ssd_data_capacity,omitempty"`

	// ssd data capacity gt
	SsdDataCapacityGt *float64 `json:"ssd_data_capacity_gt,omitempty"`

	// ssd data capacity gte
	SsdDataCapacityGte *float64 `json:"ssd_data_capacity_gte,omitempty"`

	// ssd data capacity in
	SsdDataCapacityIn []float64 `json:"ssd_data_capacity_in,omitempty"`

	// ssd data capacity lt
	SsdDataCapacityLt *float64 `json:"ssd_data_capacity_lt,omitempty"`

	// ssd data capacity lte
	SsdDataCapacityLte *float64 `json:"ssd_data_capacity_lte,omitempty"`

	// ssd data capacity not
	SsdDataCapacityNot *float64 `json:"ssd_data_capacity_not,omitempty"`

	// ssd data capacity not in
	SsdDataCapacityNotIn []float64 `json:"ssd_data_capacity_not_in,omitempty"`

	// ssd disk count
	SsdDiskCount *float64 `json:"ssd_disk_count,omitempty"`

	// ssd disk count gt
	SsdDiskCountGt *float64 `json:"ssd_disk_count_gt,omitempty"`

	// ssd disk count gte
	SsdDiskCountGte *float64 `json:"ssd_disk_count_gte,omitempty"`

	// ssd disk count in
	SsdDiskCountIn []float64 `json:"ssd_disk_count_in,omitempty"`

	// ssd disk count lt
	SsdDiskCountLt *float64 `json:"ssd_disk_count_lt,omitempty"`

	// ssd disk count lte
	SsdDiskCountLte *float64 `json:"ssd_disk_count_lte,omitempty"`

	// ssd disk count not
	SsdDiskCountNot *float64 `json:"ssd_disk_count_not,omitempty"`

	// ssd disk count not in
	SsdDiskCountNotIn []float64 `json:"ssd_disk_count_not_in,omitempty"`

	// state
	State interface{} `json:"state,omitempty"`

	// state in
	StateIn []HostState `json:"state_in,omitempty"`

	// state not
	StateNot interface{} `json:"state_not,omitempty"`

	// state not in
	StateNotIn []HostState `json:"state_not_in,omitempty"`

	// status
	Status interface{} `json:"status,omitempty"`

	// status in
	StatusIn []HostStatus `json:"status_in,omitempty"`

	// status not
	StatusNot interface{} `json:"status_not,omitempty"`

	// status not in
	StatusNotIn []HostStatus `json:"status_not_in,omitempty"`

	// stopped vm num
	StoppedVMNum *float64 `json:"stopped_vm_num,omitempty"`

	// stopped vm num gt
	StoppedVMNumGt *float64 `json:"stopped_vm_num_gt,omitempty"`

	// stopped vm num gte
	StoppedVMNumGte *float64 `json:"stopped_vm_num_gte,omitempty"`

	// stopped vm num in
	StoppedVMNumIn []float64 `json:"stopped_vm_num_in,omitempty"`

	// stopped vm num lt
	StoppedVMNumLt *float64 `json:"stopped_vm_num_lt,omitempty"`

	// stopped vm num lte
	StoppedVMNumLte *float64 `json:"stopped_vm_num_lte,omitempty"`

	// stopped vm num not
	StoppedVMNumNot *float64 `json:"stopped_vm_num_not,omitempty"`

	// stopped vm num not in
	StoppedVMNumNotIn []float64 `json:"stopped_vm_num_not_in,omitempty"`

	// suspended vm num
	SuspendedVMNum *float64 `json:"suspended_vm_num,omitempty"`

	// suspended vm num gt
	SuspendedVMNumGt *float64 `json:"suspended_vm_num_gt,omitempty"`

	// suspended vm num gte
	SuspendedVMNumGte *float64 `json:"suspended_vm_num_gte,omitempty"`

	// suspended vm num in
	SuspendedVMNumIn []float64 `json:"suspended_vm_num_in,omitempty"`

	// suspended vm num lt
	SuspendedVMNumLt *float64 `json:"suspended_vm_num_lt,omitempty"`

	// suspended vm num lte
	SuspendedVMNumLte *float64 `json:"suspended_vm_num_lte,omitempty"`

	// suspended vm num not
	SuspendedVMNumNot *float64 `json:"suspended_vm_num_not,omitempty"`

	// suspended vm num not in
	SuspendedVMNumNotIn []float64 `json:"suspended_vm_num_not_in,omitempty"`

	// total cache capacity
	TotalCacheCapacity *float64 `json:"total_cache_capacity,omitempty"`

	// total cache capacity gt
	TotalCacheCapacityGt *float64 `json:"total_cache_capacity_gt,omitempty"`

	// total cache capacity gte
	TotalCacheCapacityGte *float64 `json:"total_cache_capacity_gte,omitempty"`

	// total cache capacity in
	TotalCacheCapacityIn []float64 `json:"total_cache_capacity_in,omitempty"`

	// total cache capacity lt
	TotalCacheCapacityLt *float64 `json:"total_cache_capacity_lt,omitempty"`

	// total cache capacity lte
	TotalCacheCapacityLte *float64 `json:"total_cache_capacity_lte,omitempty"`

	// total cache capacity not
	TotalCacheCapacityNot *float64 `json:"total_cache_capacity_not,omitempty"`

	// total cache capacity not in
	TotalCacheCapacityNotIn []float64 `json:"total_cache_capacity_not_in,omitempty"`

	// total cpu cores
	TotalCPUCores *float64 `json:"total_cpu_cores,omitempty"`

	// total cpu cores gt
	TotalCPUCoresGt *float64 `json:"total_cpu_cores_gt,omitempty"`

	// total cpu cores gte
	TotalCPUCoresGte *float64 `json:"total_cpu_cores_gte,omitempty"`

	// total cpu cores in
	TotalCPUCoresIn []float64 `json:"total_cpu_cores_in,omitempty"`

	// total cpu cores lt
	TotalCPUCoresLt *float64 `json:"total_cpu_cores_lt,omitempty"`

	// total cpu cores lte
	TotalCPUCoresLte *float64 `json:"total_cpu_cores_lte,omitempty"`

	// total cpu cores not
	TotalCPUCoresNot *float64 `json:"total_cpu_cores_not,omitempty"`

	// total cpu cores not in
	TotalCPUCoresNotIn []float64 `json:"total_cpu_cores_not_in,omitempty"`

	// total cpu hz
	TotalCPUHz *float64 `json:"total_cpu_hz,omitempty"`

	// total cpu hz gt
	TotalCPUHzGt *float64 `json:"total_cpu_hz_gt,omitempty"`

	// total cpu hz gte
	TotalCPUHzGte *float64 `json:"total_cpu_hz_gte,omitempty"`

	// total cpu hz in
	TotalCPUHzIn []float64 `json:"total_cpu_hz_in,omitempty"`

	// total cpu hz lt
	TotalCPUHzLt *float64 `json:"total_cpu_hz_lt,omitempty"`

	// total cpu hz lte
	TotalCPUHzLte *float64 `json:"total_cpu_hz_lte,omitempty"`

	// total cpu hz not
	TotalCPUHzNot *float64 `json:"total_cpu_hz_not,omitempty"`

	// total cpu hz not in
	TotalCPUHzNotIn []float64 `json:"total_cpu_hz_not_in,omitempty"`

	// total data capacity
	TotalDataCapacity *float64 `json:"total_data_capacity,omitempty"`

	// total data capacity gt
	TotalDataCapacityGt *float64 `json:"total_data_capacity_gt,omitempty"`

	// total data capacity gte
	TotalDataCapacityGte *float64 `json:"total_data_capacity_gte,omitempty"`

	// total data capacity in
	TotalDataCapacityIn []float64 `json:"total_data_capacity_in,omitempty"`

	// total data capacity lt
	TotalDataCapacityLt *float64 `json:"total_data_capacity_lt,omitempty"`

	// total data capacity lte
	TotalDataCapacityLte *float64 `json:"total_data_capacity_lte,omitempty"`

	// total data capacity not
	TotalDataCapacityNot *float64 `json:"total_data_capacity_not,omitempty"`

	// total data capacity not in
	TotalDataCapacityNotIn []float64 `json:"total_data_capacity_not_in,omitempty"`

	// total memory bytes
	TotalMemoryBytes *float64 `json:"total_memory_bytes,omitempty"`

	// total memory bytes gt
	TotalMemoryBytesGt *float64 `json:"total_memory_bytes_gt,omitempty"`

	// total memory bytes gte
	TotalMemoryBytesGte *float64 `json:"total_memory_bytes_gte,omitempty"`

	// total memory bytes in
	TotalMemoryBytesIn []float64 `json:"total_memory_bytes_in,omitempty"`

	// total memory bytes lt
	TotalMemoryBytesLt *float64 `json:"total_memory_bytes_lt,omitempty"`

	// total memory bytes lte
	TotalMemoryBytesLte *float64 `json:"total_memory_bytes_lte,omitempty"`

	// total memory bytes not
	TotalMemoryBytesNot *float64 `json:"total_memory_bytes_not,omitempty"`

	// total memory bytes not in
	TotalMemoryBytesNotIn []float64 `json:"total_memory_bytes_not_in,omitempty"`

	// usb devices every
	UsbDevicesEvery interface{} `json:"usb_devices_every,omitempty"`

	// usb devices none
	UsbDevicesNone interface{} `json:"usb_devices_none,omitempty"`

	// usb devices some
	UsbDevicesSome interface{} `json:"usb_devices_some,omitempty"`

	// used cpu hz
	UsedCPUHz *float64 `json:"used_cpu_hz,omitempty"`

	// used cpu hz gt
	UsedCPUHzGt *float64 `json:"used_cpu_hz_gt,omitempty"`

	// used cpu hz gte
	UsedCPUHzGte *float64 `json:"used_cpu_hz_gte,omitempty"`

	// used cpu hz in
	UsedCPUHzIn []float64 `json:"used_cpu_hz_in,omitempty"`

	// used cpu hz lt
	UsedCPUHzLt *float64 `json:"used_cpu_hz_lt,omitempty"`

	// used cpu hz lte
	UsedCPUHzLte *float64 `json:"used_cpu_hz_lte,omitempty"`

	// used cpu hz not
	UsedCPUHzNot *float64 `json:"used_cpu_hz_not,omitempty"`

	// used cpu hz not in
	UsedCPUHzNotIn []float64 `json:"used_cpu_hz_not_in,omitempty"`

	// used data space
	UsedDataSpace *float64 `json:"used_data_space,omitempty"`

	// used data space gt
	UsedDataSpaceGt *float64 `json:"used_data_space_gt,omitempty"`

	// used data space gte
	UsedDataSpaceGte *float64 `json:"used_data_space_gte,omitempty"`

	// used data space in
	UsedDataSpaceIn []float64 `json:"used_data_space_in,omitempty"`

	// used data space lt
	UsedDataSpaceLt *float64 `json:"used_data_space_lt,omitempty"`

	// used data space lte
	UsedDataSpaceLte *float64 `json:"used_data_space_lte,omitempty"`

	// used data space not
	UsedDataSpaceNot *float64 `json:"used_data_space_not,omitempty"`

	// used data space not in
	UsedDataSpaceNotIn []float64 `json:"used_data_space_not_in,omitempty"`

	// used memory bytes
	UsedMemoryBytes *float64 `json:"used_memory_bytes,omitempty"`

	// used memory bytes gt
	UsedMemoryBytesGt *float64 `json:"used_memory_bytes_gt,omitempty"`

	// used memory bytes gte
	UsedMemoryBytesGte *float64 `json:"used_memory_bytes_gte,omitempty"`

	// used memory bytes in
	UsedMemoryBytesIn []float64 `json:"used_memory_bytes_in,omitempty"`

	// used memory bytes lt
	UsedMemoryBytesLt *float64 `json:"used_memory_bytes_lt,omitempty"`

	// used memory bytes lte
	UsedMemoryBytesLte *float64 `json:"used_memory_bytes_lte,omitempty"`

	// used memory bytes not
	UsedMemoryBytesNot *float64 `json:"used_memory_bytes_not,omitempty"`

	// used memory bytes not in
	UsedMemoryBytesNotIn []float64 `json:"used_memory_bytes_not_in,omitempty"`

	// vm num
	VMNum *float64 `json:"vm_num,omitempty"`

	// vm num gt
	VMNumGt *float64 `json:"vm_num_gt,omitempty"`

	// vm num gte
	VMNumGte *float64 `json:"vm_num_gte,omitempty"`

	// vm num in
	VMNumIn []float64 `json:"vm_num_in,omitempty"`

	// vm num lt
	VMNumLt *float64 `json:"vm_num_lt,omitempty"`

	// vm num lte
	VMNumLte *float64 `json:"vm_num_lte,omitempty"`

	// vm num not
	VMNumNot *float64 `json:"vm_num_not,omitempty"`

	// vm num not in
	VMNumNotIn []float64 `json:"vm_num_not_in,omitempty"`

	// vmotion ip
	VmotionIP *string `json:"vmotion_ip,omitempty"`

	// vmotion ip contains
	VmotionIPContains *string `json:"vmotion_ip_contains,omitempty"`

	// vmotion ip ends with
	VmotionIPEndsWith *string `json:"vmotion_ip_ends_with,omitempty"`

	// vmotion ip gt
	VmotionIPGt *string `json:"vmotion_ip_gt,omitempty"`

	// vmotion ip gte
	VmotionIPGte *string `json:"vmotion_ip_gte,omitempty"`

	// vmotion ip in
	VmotionIPIn []string `json:"vmotion_ip_in,omitempty"`

	// vmotion ip lt
	VmotionIPLt *string `json:"vmotion_ip_lt,omitempty"`

	// vmotion ip lte
	VmotionIPLte *string `json:"vmotion_ip_lte,omitempty"`

	// vmotion ip not
	VmotionIPNot *string `json:"vmotion_ip_not,omitempty"`

	// vmotion ip not contains
	VmotionIPNotContains *string `json:"vmotion_ip_not_contains,omitempty"`

	// vmotion ip not ends with
	VmotionIPNotEndsWith *string `json:"vmotion_ip_not_ends_with,omitempty"`

	// vmotion ip not in
	VmotionIPNotIn []string `json:"vmotion_ip_not_in,omitempty"`

	// vmotion ip not starts with
	VmotionIPNotStartsWith *string `json:"vmotion_ip_not_starts_with,omitempty"`

	// vmotion ip starts with
	VmotionIPStartsWith *string `json:"vmotion_ip_starts_with,omitempty"`

	// vms every
	VmsEvery interface{} `json:"vms_every,omitempty"`

	// vms none
	VmsNone interface{} `json:"vms_none,omitempty"`

	// vms some
	VmsSome interface{} `json:"vms_some,omitempty"`

	// vsphere esxi account
	VsphereEsxiAccount interface{} `json:"vsphereEsxiAccount,omitempty"`

	// with faster ssd as cache
	WithFasterSsdAsCache *bool `json:"with_faster_ssd_as_cache,omitempty"`

	// with faster ssd as cache not
	WithFasterSsdAsCacheNot *bool `json:"with_faster_ssd_as_cache_not,omitempty"`

	// zone
	Zone interface{} `json:"zone,omitempty"`
}

// Validate validates this host where input
func (m *HostWhereInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAND(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNOT(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOR(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCPUFanSpeedUnitIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCPUFanSpeedUnitNotIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStateIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStateNotIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatusIn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatusNotIn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HostWhereInput) validateAND(formats strfmt.Registry) error {
	if swag.IsZero(m.AND) { // not required
		return nil
	}

	for i := 0; i < len(m.AND); i++ {
		if swag.IsZero(m.AND[i]) { // not required
			continue
		}

		if m.AND[i] != nil {
			if err := m.AND[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AND" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *HostWhereInput) validateNOT(formats strfmt.Registry) error {
	if swag.IsZero(m.NOT) { // not required
		return nil
	}

	for i := 0; i < len(m.NOT); i++ {
		if swag.IsZero(m.NOT[i]) { // not required
			continue
		}

		if m.NOT[i] != nil {
			if err := m.NOT[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("NOT" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *HostWhereInput) validateOR(formats strfmt.Registry) error {
	if swag.IsZero(m.OR) { // not required
		return nil
	}

	for i := 0; i < len(m.OR); i++ {
		if swag.IsZero(m.OR[i]) { // not required
			continue
		}

		if m.OR[i] != nil {
			if err := m.OR[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("OR" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *HostWhereInput) validateCPUFanSpeedUnitIn(formats strfmt.Registry) error {
	if swag.IsZero(m.CPUFanSpeedUnitIn) { // not required
		return nil
	}

	for i := 0; i < len(m.CPUFanSpeedUnitIn); i++ {

		if err := m.CPUFanSpeedUnitIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cpu_fan_speed_unit_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *HostWhereInput) validateCPUFanSpeedUnitNotIn(formats strfmt.Registry) error {
	if swag.IsZero(m.CPUFanSpeedUnitNotIn) { // not required
		return nil
	}

	for i := 0; i < len(m.CPUFanSpeedUnitNotIn); i++ {

		if err := m.CPUFanSpeedUnitNotIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cpu_fan_speed_unit_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *HostWhereInput) validateStateIn(formats strfmt.Registry) error {
	if swag.IsZero(m.StateIn) { // not required
		return nil
	}

	for i := 0; i < len(m.StateIn); i++ {

		if err := m.StateIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("state_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *HostWhereInput) validateStateNotIn(formats strfmt.Registry) error {
	if swag.IsZero(m.StateNotIn) { // not required
		return nil
	}

	for i := 0; i < len(m.StateNotIn); i++ {

		if err := m.StateNotIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("state_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *HostWhereInput) validateStatusIn(formats strfmt.Registry) error {
	if swag.IsZero(m.StatusIn) { // not required
		return nil
	}

	for i := 0; i < len(m.StatusIn); i++ {

		if err := m.StatusIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("status_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *HostWhereInput) validateStatusNotIn(formats strfmt.Registry) error {
	if swag.IsZero(m.StatusNotIn) { // not required
		return nil
	}

	for i := 0; i < len(m.StatusNotIn); i++ {

		if err := m.StatusNotIn[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("status_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// ContextValidate validate this host where input based on the context it is used
func (m *HostWhereInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAND(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateNOT(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateOR(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateCPUFanSpeedUnitIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateCPUFanSpeedUnitNotIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateStateIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateStateNotIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateStatusIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateStatusNotIn(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HostWhereInput) contextValidateAND(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.AND); i++ {

		if m.AND[i] != nil {
			if err := m.AND[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AND" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *HostWhereInput) contextValidateNOT(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.NOT); i++ {

		if m.NOT[i] != nil {
			if err := m.NOT[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("NOT" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *HostWhereInput) contextValidateOR(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.OR); i++ {

		if m.OR[i] != nil {
			if err := m.OR[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("OR" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *HostWhereInput) contextValidateCPUFanSpeedUnitIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.CPUFanSpeedUnitIn); i++ {

		if err := m.CPUFanSpeedUnitIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cpu_fan_speed_unit_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *HostWhereInput) contextValidateCPUFanSpeedUnitNotIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.CPUFanSpeedUnitNotIn); i++ {

		if err := m.CPUFanSpeedUnitNotIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("cpu_fan_speed_unit_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *HostWhereInput) contextValidateStateIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.StateIn); i++ {

		if err := m.StateIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("state_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *HostWhereInput) contextValidateStateNotIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.StateNotIn); i++ {

		if err := m.StateNotIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("state_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *HostWhereInput) contextValidateStatusIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.StatusIn); i++ {

		if err := m.StatusIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("status_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *HostWhereInput) contextValidateStatusNotIn(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.StatusNotIn); i++ {

		if err := m.StatusNotIn[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("status_not_in" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *HostWhereInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HostWhereInput) UnmarshalBinary(b []byte) error {
	var res HostWhereInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
