// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VMNicModel Vm nic model
//
// swagger:model VmNicModel
type VMNicModel string

func NewVMNicModel(value VMNicModel) *VMNicModel {
	v := value
	return &v
}

const (

	// VMNicModelE1000 captures enum value "E1000"
	VMNicModelE1000 VMNicModel = "E1000"

	// VMNicModelSRIOV captures enum value "SRIOV"
	VMNicModelSRIOV VMNicModel = "SRIOV"

	// VMNicModelVIRTIO captures enum value "VIRTIO"
	VMNicModelVIRTIO VMNicModel = "VIRTIO"
)

// for schema
var vmNicModelEnum []interface{}

func init() {
	var res []VMNicModel
	if err := json.Unmarshal([]byte(`["E1000","SRIOV","VIRTIO"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vmNicModelEnum = append(vmNicModelEnum, v)
	}
}

func (m VMNicModel) validateVMNicModelEnum(path, location string, value VMNicModel) error {
	if err := validate.EnumCase(path, location, value, vmNicModelEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Vm nic model
func (m VMNicModel) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVMNicModelEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this Vm nic model based on context it is used
func (m VMNicModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
