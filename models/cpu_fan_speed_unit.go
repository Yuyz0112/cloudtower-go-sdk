// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CPUFanSpeedUnit Cpu fan speed unit
//
// swagger:model CpuFanSpeedUnit
type CPUFanSpeedUnit string

func NewCPUFanSpeedUnit(value CPUFanSpeedUnit) *CPUFanSpeedUnit {
	v := value
	return &v
}

const (

	// CPUFanSpeedUnitPERCENT captures enum value "PERCENT"
	CPUFanSpeedUnitPERCENT CPUFanSpeedUnit = "PERCENT"

	// CPUFanSpeedUnitRPM captures enum value "RPM"
	CPUFanSpeedUnitRPM CPUFanSpeedUnit = "RPM"
)

// for schema
var cpuFanSpeedUnitEnum []interface{}

func init() {
	var res []CPUFanSpeedUnit
	if err := json.Unmarshal([]byte(`["PERCENT","RPM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cpuFanSpeedUnitEnum = append(cpuFanSpeedUnitEnum, v)
	}
}

func (m CPUFanSpeedUnit) validateCPUFanSpeedUnitEnum(path, location string, value CPUFanSpeedUnit) error {
	if err := validate.EnumCase(path, location, value, cpuFanSpeedUnitEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Cpu fan speed unit
func (m CPUFanSpeedUnit) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCPUFanSpeedUnitEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this Cpu fan speed unit based on context it is used
func (m CPUFanSpeedUnit) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
