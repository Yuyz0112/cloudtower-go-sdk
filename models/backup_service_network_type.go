// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BackupServiceNetworkType backup service network type
//
// swagger:model BackupServiceNetworkType
type BackupServiceNetworkType string

func NewBackupServiceNetworkType(value BackupServiceNetworkType) *BackupServiceNetworkType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated BackupServiceNetworkType.
func (m BackupServiceNetworkType) Pointer() *BackupServiceNetworkType {
	return &m
}

const (

	// BackupServiceNetworkTypeMANAGEMENT captures enum value "MANAGEMENT"
	BackupServiceNetworkTypeMANAGEMENT BackupServiceNetworkType = "MANAGEMENT"

	// BackupServiceNetworkTypeNEWNIC captures enum value "NEW_NIC"
	BackupServiceNetworkTypeNEWNIC BackupServiceNetworkType = "NEW_NIC"

	// BackupServiceNetworkTypeSTORAGE captures enum value "STORAGE"
	BackupServiceNetworkTypeSTORAGE BackupServiceNetworkType = "STORAGE"
)

// for schema
var backupServiceNetworkTypeEnum []interface{}

func init() {
	var res []BackupServiceNetworkType
	if err := json.Unmarshal([]byte(`["MANAGEMENT","NEW_NIC","STORAGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		backupServiceNetworkTypeEnum = append(backupServiceNetworkTypeEnum, v)
	}
}

func (m BackupServiceNetworkType) validateBackupServiceNetworkTypeEnum(path, location string, value BackupServiceNetworkType) error {
	if err := validate.EnumCase(path, location, value, backupServiceNetworkTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this backup service network type
func (m BackupServiceNetworkType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBackupServiceNetworkTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this backup service network type based on context it is used
func (m BackupServiceNetworkType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
