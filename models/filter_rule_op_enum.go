// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// FilterRuleOpEnum filter rule op enum
//
// swagger:model FilterRuleOpEnum
type FilterRuleOpEnum string

func NewFilterRuleOpEnum(value FilterRuleOpEnum) *FilterRuleOpEnum {
	v := value
	return &v
}

const (

	// FilterRuleOpEnumGT captures enum value "GT"
	FilterRuleOpEnumGT FilterRuleOpEnum = "GT"

	// FilterRuleOpEnumGTE captures enum value "GTE"
	FilterRuleOpEnumGTE FilterRuleOpEnum = "GTE"

	// FilterRuleOpEnumLT captures enum value "LT"
	FilterRuleOpEnumLT FilterRuleOpEnum = "LT"

	// FilterRuleOpEnumLTE captures enum value "LTE"
	FilterRuleOpEnumLTE FilterRuleOpEnum = "LTE"
)

// for schema
var filterRuleOpEnumEnum []interface{}

func init() {
	var res []FilterRuleOpEnum
	if err := json.Unmarshal([]byte(`["GT","GTE","LT","LTE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		filterRuleOpEnumEnum = append(filterRuleOpEnumEnum, v)
	}
}

func (m FilterRuleOpEnum) validateFilterRuleOpEnumEnum(path, location string, value FilterRuleOpEnum) error {
	if err := validate.EnumCase(path, location, value, filterRuleOpEnumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this filter rule op enum
func (m FilterRuleOpEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateFilterRuleOpEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this filter rule op enum based on context it is used
func (m FilterRuleOpEnum) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
