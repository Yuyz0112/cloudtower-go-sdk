// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// UserOrderByInput user order by input
//
// swagger:model UserOrderByInput
type UserOrderByInput string

func NewUserOrderByInput(value UserOrderByInput) *UserOrderByInput {
	v := value
	return &v
}

const (

	// UserOrderByInputCreatedAtASC captures enum value "createdAt_ASC"
	UserOrderByInputCreatedAtASC UserOrderByInput = "createdAt_ASC"

	// UserOrderByInputCreatedAtDESC captures enum value "createdAt_DESC"
	UserOrderByInputCreatedAtDESC UserOrderByInput = "createdAt_DESC"

	// UserOrderByInputEmailAddressASC captures enum value "email_address_ASC"
	UserOrderByInputEmailAddressASC UserOrderByInput = "email_address_ASC"

	// UserOrderByInputEmailAddressDESC captures enum value "email_address_DESC"
	UserOrderByInputEmailAddressDESC UserOrderByInput = "email_address_DESC"

	// UserOrderByInputIDASC captures enum value "id_ASC"
	UserOrderByInputIDASC UserOrderByInput = "id_ASC"

	// UserOrderByInputIDDESC captures enum value "id_DESC"
	UserOrderByInputIDDESC UserOrderByInput = "id_DESC"

	// UserOrderByInputLdapDnASC captures enum value "ldap_dn_ASC"
	UserOrderByInputLdapDnASC UserOrderByInput = "ldap_dn_ASC"

	// UserOrderByInputLdapDnDESC captures enum value "ldap_dn_DESC"
	UserOrderByInputLdapDnDESC UserOrderByInput = "ldap_dn_DESC"

	// UserOrderByInputMobilePhoneASC captures enum value "mobile_phone_ASC"
	UserOrderByInputMobilePhoneASC UserOrderByInput = "mobile_phone_ASC"

	// UserOrderByInputMobilePhoneDESC captures enum value "mobile_phone_DESC"
	UserOrderByInputMobilePhoneDESC UserOrderByInput = "mobile_phone_DESC"

	// UserOrderByInputNameASC captures enum value "name_ASC"
	UserOrderByInputNameASC UserOrderByInput = "name_ASC"

	// UserOrderByInputNameDESC captures enum value "name_DESC"
	UserOrderByInputNameDESC UserOrderByInput = "name_DESC"

	// UserOrderByInputPasswordASC captures enum value "password_ASC"
	UserOrderByInputPasswordASC UserOrderByInput = "password_ASC"

	// UserOrderByInputPasswordDESC captures enum value "password_DESC"
	UserOrderByInputPasswordDESC UserOrderByInput = "password_DESC"

	// UserOrderByInputRoleASC captures enum value "role_ASC"
	UserOrderByInputRoleASC UserOrderByInput = "role_ASC"

	// UserOrderByInputRoleDESC captures enum value "role_DESC"
	UserOrderByInputRoleDESC UserOrderByInput = "role_DESC"

	// UserOrderByInputSourceASC captures enum value "source_ASC"
	UserOrderByInputSourceASC UserOrderByInput = "source_ASC"

	// UserOrderByInputSourceDESC captures enum value "source_DESC"
	UserOrderByInputSourceDESC UserOrderByInput = "source_DESC"

	// UserOrderByInputUpdatedAtASC captures enum value "updatedAt_ASC"
	UserOrderByInputUpdatedAtASC UserOrderByInput = "updatedAt_ASC"

	// UserOrderByInputUpdatedAtDESC captures enum value "updatedAt_DESC"
	UserOrderByInputUpdatedAtDESC UserOrderByInput = "updatedAt_DESC"

	// UserOrderByInputUsernameASC captures enum value "username_ASC"
	UserOrderByInputUsernameASC UserOrderByInput = "username_ASC"

	// UserOrderByInputUsernameDESC captures enum value "username_DESC"
	UserOrderByInputUsernameDESC UserOrderByInput = "username_DESC"
)

// for schema
var userOrderByInputEnum []interface{}

func init() {
	var res []UserOrderByInput
	if err := json.Unmarshal([]byte(`["createdAt_ASC","createdAt_DESC","email_address_ASC","email_address_DESC","id_ASC","id_DESC","ldap_dn_ASC","ldap_dn_DESC","mobile_phone_ASC","mobile_phone_DESC","name_ASC","name_DESC","password_ASC","password_DESC","role_ASC","role_DESC","source_ASC","source_DESC","updatedAt_ASC","updatedAt_DESC","username_ASC","username_DESC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		userOrderByInputEnum = append(userOrderByInputEnum, v)
	}
}

func (m UserOrderByInput) validateUserOrderByInputEnum(path, location string, value UserOrderByInput) error {
	if err := validate.EnumCase(path, location, value, userOrderByInputEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this user order by input
func (m UserOrderByInput) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateUserOrderByInputEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this user order by input based on context it is used
func (m UserOrderByInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
