// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BackupPlanKeepPolicy backup plan keep policy
//
// swagger:model BackupPlanKeepPolicy
type BackupPlanKeepPolicy string

func NewBackupPlanKeepPolicy(value BackupPlanKeepPolicy) *BackupPlanKeepPolicy {
	v := value
	return &v
}

const (

	// BackupPlanKeepPolicyCOUNT captures enum value "COUNT"
	BackupPlanKeepPolicyCOUNT BackupPlanKeepPolicy = "COUNT"

	// BackupPlanKeepPolicyFOREVER captures enum value "FOREVER"
	BackupPlanKeepPolicyFOREVER BackupPlanKeepPolicy = "FOREVER"

	// BackupPlanKeepPolicyTIME captures enum value "TIME"
	BackupPlanKeepPolicyTIME BackupPlanKeepPolicy = "TIME"
)

// for schema
var backupPlanKeepPolicyEnum []interface{}

func init() {
	var res []BackupPlanKeepPolicy
	if err := json.Unmarshal([]byte(`["COUNT","FOREVER","TIME"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		backupPlanKeepPolicyEnum = append(backupPlanKeepPolicyEnum, v)
	}
}

func (m BackupPlanKeepPolicy) validateBackupPlanKeepPolicyEnum(path, location string, value BackupPlanKeepPolicy) error {
	if err := validate.EnumCase(path, location, value, backupPlanKeepPolicyEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this backup plan keep policy
func (m BackupPlanKeepPolicy) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBackupPlanKeepPolicyEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this backup plan keep policy based on context it is used
func (m BackupPlanKeepPolicy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
