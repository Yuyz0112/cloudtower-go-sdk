// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// WeekdayTypeEnum weekday type enum
//
// swagger:model WeekdayTypeEnum
type WeekdayTypeEnum string

func NewWeekdayTypeEnum(value WeekdayTypeEnum) *WeekdayTypeEnum {
	v := value
	return &v
}

const (

	// WeekdayTypeEnumFRI captures enum value "FRI"
	WeekdayTypeEnumFRI WeekdayTypeEnum = "FRI"

	// WeekdayTypeEnumMON captures enum value "MON"
	WeekdayTypeEnumMON WeekdayTypeEnum = "MON"

	// WeekdayTypeEnumSAT captures enum value "SAT"
	WeekdayTypeEnumSAT WeekdayTypeEnum = "SAT"

	// WeekdayTypeEnumSUN captures enum value "SUN"
	WeekdayTypeEnumSUN WeekdayTypeEnum = "SUN"

	// WeekdayTypeEnumTHU captures enum value "THU"
	WeekdayTypeEnumTHU WeekdayTypeEnum = "THU"

	// WeekdayTypeEnumTUE captures enum value "TUE"
	WeekdayTypeEnumTUE WeekdayTypeEnum = "TUE"

	// WeekdayTypeEnumWED captures enum value "WED"
	WeekdayTypeEnumWED WeekdayTypeEnum = "WED"
)

// for schema
var weekdayTypeEnumEnum []interface{}

func init() {
	var res []WeekdayTypeEnum
	if err := json.Unmarshal([]byte(`["FRI","MON","SAT","SUN","THU","TUE","WED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		weekdayTypeEnumEnum = append(weekdayTypeEnumEnum, v)
	}
}

func (m WeekdayTypeEnum) validateWeekdayTypeEnumEnum(path, location string, value WeekdayTypeEnum) error {
	if err := validate.EnumCase(path, location, value, weekdayTypeEnumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this weekday type enum
func (m WeekdayTypeEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWeekdayTypeEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this weekday type enum based on context it is used
func (m WeekdayTypeEnum) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
