// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ElfImageOrderByInput elf image order by input
//
// swagger:model ElfImageOrderByInput
type ElfImageOrderByInput string

func NewElfImageOrderByInput(value ElfImageOrderByInput) *ElfImageOrderByInput {
	v := value
	return &v
}

const (

	// ElfImageOrderByInputCreatedAtASC captures enum value "createdAt_ASC"
	ElfImageOrderByInputCreatedAtASC ElfImageOrderByInput = "createdAt_ASC"

	// ElfImageOrderByInputCreatedAtDESC captures enum value "createdAt_DESC"
	ElfImageOrderByInputCreatedAtDESC ElfImageOrderByInput = "createdAt_DESC"

	// ElfImageOrderByInputDescriptionASC captures enum value "description_ASC"
	ElfImageOrderByInputDescriptionASC ElfImageOrderByInput = "description_ASC"

	// ElfImageOrderByInputDescriptionDESC captures enum value "description_DESC"
	ElfImageOrderByInputDescriptionDESC ElfImageOrderByInput = "description_DESC"

	// ElfImageOrderByInputEntityAsyncStatusASC captures enum value "entityAsyncStatus_ASC"
	ElfImageOrderByInputEntityAsyncStatusASC ElfImageOrderByInput = "entityAsyncStatus_ASC"

	// ElfImageOrderByInputEntityAsyncStatusDESC captures enum value "entityAsyncStatus_DESC"
	ElfImageOrderByInputEntityAsyncStatusDESC ElfImageOrderByInput = "entityAsyncStatus_DESC"

	// ElfImageOrderByInputIDASC captures enum value "id_ASC"
	ElfImageOrderByInputIDASC ElfImageOrderByInput = "id_ASC"

	// ElfImageOrderByInputIDDESC captures enum value "id_DESC"
	ElfImageOrderByInputIDDESC ElfImageOrderByInput = "id_DESC"

	// ElfImageOrderByInputLocalCreatedAtASC captures enum value "local_created_at_ASC"
	ElfImageOrderByInputLocalCreatedAtASC ElfImageOrderByInput = "local_created_at_ASC"

	// ElfImageOrderByInputLocalCreatedAtDESC captures enum value "local_created_at_DESC"
	ElfImageOrderByInputLocalCreatedAtDESC ElfImageOrderByInput = "local_created_at_DESC"

	// ElfImageOrderByInputLocalIDASC captures enum value "local_id_ASC"
	ElfImageOrderByInputLocalIDASC ElfImageOrderByInput = "local_id_ASC"

	// ElfImageOrderByInputLocalIDDESC captures enum value "local_id_DESC"
	ElfImageOrderByInputLocalIDDESC ElfImageOrderByInput = "local_id_DESC"

	// ElfImageOrderByInputNameASC captures enum value "name_ASC"
	ElfImageOrderByInputNameASC ElfImageOrderByInput = "name_ASC"

	// ElfImageOrderByInputNameDESC captures enum value "name_DESC"
	ElfImageOrderByInputNameDESC ElfImageOrderByInput = "name_DESC"

	// ElfImageOrderByInputPathASC captures enum value "path_ASC"
	ElfImageOrderByInputPathASC ElfImageOrderByInput = "path_ASC"

	// ElfImageOrderByInputPathDESC captures enum value "path_DESC"
	ElfImageOrderByInputPathDESC ElfImageOrderByInput = "path_DESC"

	// ElfImageOrderByInputSizeASC captures enum value "size_ASC"
	ElfImageOrderByInputSizeASC ElfImageOrderByInput = "size_ASC"

	// ElfImageOrderByInputSizeDESC captures enum value "size_DESC"
	ElfImageOrderByInputSizeDESC ElfImageOrderByInput = "size_DESC"

	// ElfImageOrderByInputUpdatedAtASC captures enum value "updatedAt_ASC"
	ElfImageOrderByInputUpdatedAtASC ElfImageOrderByInput = "updatedAt_ASC"

	// ElfImageOrderByInputUpdatedAtDESC captures enum value "updatedAt_DESC"
	ElfImageOrderByInputUpdatedAtDESC ElfImageOrderByInput = "updatedAt_DESC"
)

// for schema
var elfImageOrderByInputEnum []interface{}

func init() {
	var res []ElfImageOrderByInput
	if err := json.Unmarshal([]byte(`["createdAt_ASC","createdAt_DESC","description_ASC","description_DESC","entityAsyncStatus_ASC","entityAsyncStatus_DESC","id_ASC","id_DESC","local_created_at_ASC","local_created_at_DESC","local_id_ASC","local_id_DESC","name_ASC","name_DESC","path_ASC","path_DESC","size_ASC","size_DESC","updatedAt_ASC","updatedAt_DESC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		elfImageOrderByInputEnum = append(elfImageOrderByInputEnum, v)
	}
}

func (m ElfImageOrderByInput) validateElfImageOrderByInputEnum(path, location string, value ElfImageOrderByInput) error {
	if err := validate.EnumCase(path, location, value, elfImageOrderByInputEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this elf image order by input
func (m ElfImageOrderByInput) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateElfImageOrderByInputEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this elf image order by input based on context it is used
func (m ElfImageOrderByInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
