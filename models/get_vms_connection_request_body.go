// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetVmsConnectionRequestBody get vms connection request body
// Example: {"after":"vmsConnection-id-string","before":"vmsConnection-id-string","first":0,"last":0,"orderBy":"clock_offset_ASC","skip":0,"where":{"AND":"VmWhereInput[]","NOT":"VmWhereInput[]","OR":"VmWhereInput[]","backup_plans_every":"BackupPlanWhereInput","backup_plans_none":"BackupPlanWhereInput","backup_plans_some":"BackupPlanWhereInput","clock_offset":"LOCALTIME","clock_offset_in":["LOCALTIME"],"clock_offset_not":"LOCALTIME","clock_offset_not_in":["LOCALTIME"],"cluster":"ClusterWhereInput","cpu_model":"string","cpu_model_contains":"string","cpu_model_ends_with":"string","cpu_model_gt":"string","cpu_model_gte":"string","cpu_model_in":["string"],"cpu_model_lt":"string","cpu_model_lte":"string","cpu_model_not":"string","cpu_model_not_contains":"string","cpu_model_not_ends_with":"string","cpu_model_not_in":["string"],"cpu_model_not_starts_with":"string","cpu_model_starts_with":"string","cpu_usage":0,"cpu_usage_gt":0,"cpu_usage_gte":0,"cpu_usage_in":[0],"cpu_usage_lt":0,"cpu_usage_lte":0,"cpu_usage_not":0,"cpu_usage_not_in":[0],"deleted_at":"string","deleted_at_gt":"string","deleted_at_gte":"string","deleted_at_in":["string"],"deleted_at_lt":"string","deleted_at_lte":"string","deleted_at_not":"string","deleted_at_not_in":["string"],"description":"string","description_contains":"string","description_ends_with":"string","description_gt":"string","description_gte":"string","description_in":["string"],"description_lt":"string","description_lte":"string","description_not":"string","description_not_contains":"string","description_not_ends_with":"string","description_not_in":["string"],"description_not_starts_with":"string","description_starts_with":"string","dns_servers":"string","dns_servers_contains":"string","dns_servers_ends_with":"string","dns_servers_gt":"string","dns_servers_gte":"string","dns_servers_in":["string"],"dns_servers_lt":"string","dns_servers_lte":"string","dns_servers_not":"string","dns_servers_not_contains":"string","dns_servers_not_ends_with":"string","dns_servers_not_in":["string"],"dns_servers_not_starts_with":"string","dns_servers_starts_with":"string","entityAsyncStatus":"CREATING","entityAsyncStatus_in":["CREATING"],"entityAsyncStatus_not":"CREATING","entityAsyncStatus_not_in":["CREATING"],"entity_filter_results_every":"VmEntityFilterResultWhereInput","entity_filter_results_none":"VmEntityFilterResultWhereInput","entity_filter_results_some":"VmEntityFilterResultWhereInput","firmware":"BIOS","firmware_in":["BIOS"],"firmware_not":"BIOS","firmware_not_in":["BIOS"],"folder":"VmFolderWhereInput","guest_cpu_model":"string","guest_cpu_model_contains":"string","guest_cpu_model_ends_with":"string","guest_cpu_model_gt":"string","guest_cpu_model_gte":"string","guest_cpu_model_in":["string"],"guest_cpu_model_lt":"string","guest_cpu_model_lte":"string","guest_cpu_model_not":"string","guest_cpu_model_not_contains":"string","guest_cpu_model_not_ends_with":"string","guest_cpu_model_not_in":["string"],"guest_cpu_model_not_starts_with":"string","guest_cpu_model_starts_with":"string","guest_os_type":"LINUX","guest_os_type_in":["LINUX"],"guest_os_type_not":"LINUX","guest_os_type_not_in":["LINUX"],"guest_size_usage":0,"guest_size_usage_gt":0,"guest_size_usage_gte":0,"guest_size_usage_in":[0],"guest_size_usage_lt":0,"guest_size_usage_lte":0,"guest_size_usage_not":0,"guest_size_usage_not_in":[0],"guest_used_size":0,"guest_used_size_gt":0,"guest_used_size_gte":0,"guest_used_size_in":[0],"guest_used_size_lt":0,"guest_used_size_lte":0,"guest_used_size_not":0,"guest_used_size_not_in":[0],"ha":false,"ha_not":false,"host":"HostWhereInput","hostname":"string","hostname_contains":"string","hostname_ends_with":"string","hostname_gt":"string","hostname_gte":"string","hostname_in":["string"],"hostname_lt":"string","hostname_lte":"string","hostname_not":"string","hostname_not_contains":"string","hostname_not_ends_with":"string","hostname_not_in":["string"],"hostname_not_starts_with":"string","hostname_starts_with":"string","id":"string","id_contains":"string","id_ends_with":"string","id_gt":"string","id_gte":"string","id_in":["string"],"id_lt":"string","id_lte":"string","id_not":"string","id_not_contains":"string","id_not_ends_with":"string","id_not_in":["string"],"id_not_starts_with":"string","id_starts_with":"string","in_recycle_bin":false,"in_recycle_bin_not":false,"installed_backup_service":"BackupServiceWhereInput","internal":false,"internal_not":false,"io_policy":"RESTRICT_EACH_DISK","io_policy_in":["RESTRICT_EACH_DISK"],"io_policy_not":"RESTRICT_EACH_DISK","io_policy_not_in":["RESTRICT_EACH_DISK"],"ips":"string","ips_contains":"string","ips_ends_with":"string","ips_gt":"string","ips_gte":"string","ips_in":["string"],"ips_lt":"string","ips_lte":"string","ips_not":"string","ips_not_contains":"string","ips_not_ends_with":"string","ips_not_in":["string"],"ips_not_starts_with":"string","ips_starts_with":"string","isolation_policy":"IsolationPolicyWhereInput","kernel_info":"string","kernel_info_contains":"string","kernel_info_ends_with":"string","kernel_info_gt":"string","kernel_info_gte":"string","kernel_info_in":["string"],"kernel_info_lt":"string","kernel_info_lte":"string","kernel_info_not":"string","kernel_info_not_contains":"string","kernel_info_not_ends_with":"string","kernel_info_not_in":["string"],"kernel_info_not_starts_with":"string","kernel_info_starts_with":"string","labels_every":"LabelWhereInput","labels_none":"LabelWhereInput","labels_some":"LabelWhereInput","last_shutdown_time":"string","last_shutdown_time_gt":"string","last_shutdown_time_gte":"string","last_shutdown_time_in":["string"],"last_shutdown_time_lt":"string","last_shutdown_time_lte":"string","last_shutdown_time_not":"string","last_shutdown_time_not_in":["string"],"local_created_at":"string","local_created_at_gt":"string","local_created_at_gte":"string","local_created_at_in":["string"],"local_created_at_lt":"string","local_created_at_lte":"string","local_created_at_not":"string","local_created_at_not_in":["string"],"local_id":"string","local_id_contains":"string","local_id_ends_with":"string","local_id_gt":"string","local_id_gte":"string","local_id_in":["string"],"local_id_lt":"string","local_id_lte":"string","local_id_not":"string","local_id_not_contains":"string","local_id_not_ends_with":"string","local_id_not_in":["string"],"local_id_not_starts_with":"string","local_id_starts_with":"string","logical_size_bytes":0,"logical_size_bytes_gt":0,"logical_size_bytes_gte":0,"logical_size_bytes_in":[0],"logical_size_bytes_lt":0,"logical_size_bytes_lte":0,"logical_size_bytes_not":0,"logical_size_bytes_not_in":[0],"max_bandwidth":0,"max_bandwidth_gt":0,"max_bandwidth_gte":0,"max_bandwidth_in":[0],"max_bandwidth_lt":0,"max_bandwidth_lte":0,"max_bandwidth_not":0,"max_bandwidth_not_in":[0],"max_bandwidth_policy":"DYNAMIC","max_bandwidth_policy_in":["DYNAMIC"],"max_bandwidth_policy_not":"DYNAMIC","max_bandwidth_policy_not_in":["DYNAMIC"],"max_iops":0,"max_iops_gt":0,"max_iops_gte":0,"max_iops_in":[0],"max_iops_lt":0,"max_iops_lte":0,"max_iops_not":0,"max_iops_not_in":[0],"max_iops_policy":"DYNAMIC","max_iops_policy_in":["DYNAMIC"],"max_iops_policy_not":"DYNAMIC","max_iops_policy_not_in":["DYNAMIC"],"memory":0,"memory_gt":0,"memory_gte":0,"memory_in":[0],"memory_lt":0,"memory_lte":0,"memory_not":0,"memory_not_in":[0],"memory_usage":0,"memory_usage_gt":0,"memory_usage_gte":0,"memory_usage_in":[0],"memory_usage_lt":0,"memory_usage_lte":0,"memory_usage_not":0,"memory_usage_not_in":[0],"name":"string","name_contains":"string","name_ends_with":"string","name_gt":"string","name_gte":"string","name_in":["string"],"name_lt":"string","name_lte":"string","name_not":"string","name_not_contains":"string","name_not_ends_with":"string","name_not_in":["string"],"name_not_starts_with":"string","name_starts_with":"string","nested_virtualization":false,"nested_virtualization_not":false,"node_ip":"string","node_ip_contains":"string","node_ip_ends_with":"string","node_ip_gt":"string","node_ip_gte":"string","node_ip_in":["string"],"node_ip_lt":"string","node_ip_lte":"string","node_ip_not":"string","node_ip_not_contains":"string","node_ip_not_ends_with":"string","node_ip_not_in":["string"],"node_ip_not_starts_with":"string","node_ip_starts_with":"string","original_name":"string","original_name_contains":"string","original_name_ends_with":"string","original_name_gt":"string","original_name_gte":"string","original_name_in":["string"],"original_name_lt":"string","original_name_lte":"string","original_name_not":"string","original_name_not_contains":"string","original_name_not_ends_with":"string","original_name_not_in":["string"],"original_name_not_starts_with":"string","original_name_starts_with":"string","os":"string","os_contains":"string","os_ends_with":"string","os_gt":"string","os_gte":"string","os_in":["string"],"os_lt":"string","os_lte":"string","os_not":"string","os_not_contains":"string","os_not_ends_with":"string","os_not_in":["string"],"os_not_starts_with":"string","os_starts_with":"string","protected":false,"protected_not":false,"provisioned_size":0,"provisioned_size_gt":0,"provisioned_size_gte":0,"provisioned_size_in":[0],"provisioned_size_lt":0,"provisioned_size_lte":0,"provisioned_size_not":0,"provisioned_size_not_in":[0],"size":0,"size_gt":0,"size_gte":0,"size_in":[0],"size_lt":0,"size_lte":0,"size_not":0,"size_not_in":[0],"snapshot_plan":"SnapshotPlanWhereInput","snapshots_every":"VmSnapshotWhereInput","snapshots_none":"VmSnapshotWhereInput","snapshots_some":"VmSnapshotWhereInput","status":"DELETED","status_in":["DELETED"],"status_not":"DELETED","status_not_in":["DELETED"],"unique_size":0,"unique_size_gt":0,"unique_size_gte":0,"unique_size_in":[0],"unique_size_lt":0,"unique_size_lte":0,"unique_size_not":0,"unique_size_not_in":[0],"usb_devices_every":"UsbDeviceWhereInput","usb_devices_none":"UsbDeviceWhereInput","usb_devices_some":"UsbDeviceWhereInput","vcpu":0,"vcpu_gt":0,"vcpu_gte":0,"vcpu_in":[0],"vcpu_lt":0,"vcpu_lte":0,"vcpu_not":0,"vcpu_not_in":[0],"video_type":"CIRRUS","video_type_in":["CIRRUS"],"video_type_not":"CIRRUS","video_type_not_in":["CIRRUS"],"vm_disks_every":"VmDiskWhereInput","vm_disks_none":"VmDiskWhereInput","vm_disks_some":"VmDiskWhereInput","vm_nics_every":"VmNicWhereInput","vm_nics_none":"VmNicWhereInput","vm_nics_some":"VmNicWhereInput","vm_placement_group_every":"VmPlacementGroupWhereInput","vm_placement_group_none":"VmPlacementGroupWhereInput","vm_placement_group_some":"VmPlacementGroupWhereInput","vm_tools_status":"NOT_INSTALLED","vm_tools_status_in":["NOT_INSTALLED"],"vm_tools_status_not":"NOT_INSTALLED","vm_tools_status_not_in":["NOT_INSTALLED"],"vm_tools_version":"string","vm_tools_version_contains":"string","vm_tools_version_ends_with":"string","vm_tools_version_gt":"string","vm_tools_version_gte":"string","vm_tools_version_in":["string"],"vm_tools_version_lt":"string","vm_tools_version_lte":"string","vm_tools_version_not":"string","vm_tools_version_not_contains":"string","vm_tools_version_not_ends_with":"string","vm_tools_version_not_in":["string"],"vm_tools_version_not_starts_with":"string","vm_tools_version_starts_with":"string","vm_usage":"EVEROUTE_CONTROLLER","vm_usage_in":["EVEROUTE_CONTROLLER"],"vm_usage_not":"EVEROUTE_CONTROLLER","vm_usage_not_in":["EVEROUTE_CONTROLLER"],"win_opt":false,"win_opt_not":false}}
//
// swagger:model GetVmsConnectionRequestBody
type GetVmsConnectionRequestBody struct {

	// after
	After *string `json:"after,omitempty"`

	// before
	Before *string `json:"before,omitempty"`

	// first
	First *int32 `json:"first,omitempty"`

	// last
	Last *int32 `json:"last,omitempty"`

	// order by
	OrderBy *VMOrderByInput `json:"orderBy,omitempty"`

	// skip
	Skip *int32 `json:"skip,omitempty"`

	// where
	Where *VMWhereInput `json:"where,omitempty"`
}

// Validate validates this get vms connection request body
func (m *GetVmsConnectionRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrderBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWhere(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetVmsConnectionRequestBody) validateOrderBy(formats strfmt.Registry) error {
	if swag.IsZero(m.OrderBy) { // not required
		return nil
	}

	if m.OrderBy != nil {
		if err := m.OrderBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("orderBy")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("orderBy")
			}
			return err
		}
	}

	return nil
}

func (m *GetVmsConnectionRequestBody) validateWhere(formats strfmt.Registry) error {
	if swag.IsZero(m.Where) { // not required
		return nil
	}

	if m.Where != nil {
		if err := m.Where.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("where")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("where")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get vms connection request body based on the context it is used
func (m *GetVmsConnectionRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOrderBy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateWhere(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetVmsConnectionRequestBody) contextValidateOrderBy(ctx context.Context, formats strfmt.Registry) error {

	if m.OrderBy != nil {
		if err := m.OrderBy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("orderBy")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("orderBy")
			}
			return err
		}
	}

	return nil
}

func (m *GetVmsConnectionRequestBody) contextValidateWhere(ctx context.Context, formats strfmt.Registry) error {

	if m.Where != nil {
		if err := m.Where.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("where")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("where")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetVmsConnectionRequestBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetVmsConnectionRequestBody) UnmarshalBinary(b []byte) error {
	var res GetVmsConnectionRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
