// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BackupExecutionMethod backup execution method
//
// swagger:model BackupExecutionMethod
type BackupExecutionMethod string

func NewBackupExecutionMethod(value BackupExecutionMethod) *BackupExecutionMethod {
	v := value
	return &v
}

const (

	// BackupExecutionMethodAUTO captures enum value "AUTO"
	BackupExecutionMethodAUTO BackupExecutionMethod = "AUTO"

	// BackupExecutionMethodMANUAL captures enum value "MANUAL"
	BackupExecutionMethodMANUAL BackupExecutionMethod = "MANUAL"
)

// for schema
var backupExecutionMethodEnum []interface{}

func init() {
	var res []BackupExecutionMethod
	if err := json.Unmarshal([]byte(`["AUTO","MANUAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		backupExecutionMethodEnum = append(backupExecutionMethodEnum, v)
	}
}

func (m BackupExecutionMethod) validateBackupExecutionMethodEnum(path, location string, value BackupExecutionMethod) error {
	if err := validate.EnumCase(path, location, value, backupExecutionMethodEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this backup execution method
func (m BackupExecutionMethod) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBackupExecutionMethodEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this backup execution method based on context it is used
func (m BackupExecutionMethod) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
