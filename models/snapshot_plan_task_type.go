// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SnapshotPlanTaskType snapshot plan task type
//
// swagger:model SnapshotPlanTaskType
type SnapshotPlanTaskType string

func NewSnapshotPlanTaskType(value SnapshotPlanTaskType) *SnapshotPlanTaskType {
	v := value
	return &v
}

const (

	// SnapshotPlanTaskTypeTASKTYPECLONE captures enum value "TASK_TYPE_CLONE"
	SnapshotPlanTaskTypeTASKTYPECLONE SnapshotPlanTaskType = "TASK_TYPE_CLONE"

	// SnapshotPlanTaskTypeTASKTYPEPROTECT captures enum value "TASK_TYPE_PROTECT"
	SnapshotPlanTaskTypeTASKTYPEPROTECT SnapshotPlanTaskType = "TASK_TYPE_PROTECT"

	// SnapshotPlanTaskTypeTASKTYPEROLLBACK captures enum value "TASK_TYPE_ROLLBACK"
	SnapshotPlanTaskTypeTASKTYPEROLLBACK SnapshotPlanTaskType = "TASK_TYPE_ROLLBACK"
)

// for schema
var snapshotPlanTaskTypeEnum []interface{}

func init() {
	var res []SnapshotPlanTaskType
	if err := json.Unmarshal([]byte(`["TASK_TYPE_CLONE","TASK_TYPE_PROTECT","TASK_TYPE_ROLLBACK"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		snapshotPlanTaskTypeEnum = append(snapshotPlanTaskTypeEnum, v)
	}
}

func (m SnapshotPlanTaskType) validateSnapshotPlanTaskTypeEnum(path, location string, value SnapshotPlanTaskType) error {
	if err := validate.EnumCase(path, location, value, snapshotPlanTaskTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this snapshot plan task type
func (m SnapshotPlanTaskType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSnapshotPlanTaskTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this snapshot plan task type based on context it is used
func (m SnapshotPlanTaskType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
