// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MetroCheckStatusEnum metro check status enum
//
// swagger:model MetroCheckStatusEnum
type MetroCheckStatusEnum string

func NewMetroCheckStatusEnum(value MetroCheckStatusEnum) *MetroCheckStatusEnum {
	v := value
	return &v
}

const (

	// MetroCheckStatusEnumCRITICAL captures enum value "CRITICAL"
	MetroCheckStatusEnumCRITICAL MetroCheckStatusEnum = "CRITICAL"

	// MetroCheckStatusEnumHEALTHY captures enum value "HEALTHY"
	MetroCheckStatusEnumHEALTHY MetroCheckStatusEnum = "HEALTHY"

	// MetroCheckStatusEnumINFO captures enum value "INFO"
	MetroCheckStatusEnumINFO MetroCheckStatusEnum = "INFO"

	// MetroCheckStatusEnumNOTICE captures enum value "NOTICE"
	MetroCheckStatusEnumNOTICE MetroCheckStatusEnum = "NOTICE"
)

// for schema
var metroCheckStatusEnumEnum []interface{}

func init() {
	var res []MetroCheckStatusEnum
	if err := json.Unmarshal([]byte(`["CRITICAL","HEALTHY","INFO","NOTICE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		metroCheckStatusEnumEnum = append(metroCheckStatusEnumEnum, v)
	}
}

func (m MetroCheckStatusEnum) validateMetroCheckStatusEnumEnum(path, location string, value MetroCheckStatusEnum) error {
	if err := validate.EnumCase(path, location, value, metroCheckStatusEnumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this metro check status enum
func (m MetroCheckStatusEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMetroCheckStatusEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this metro check status enum based on context it is used
func (m MetroCheckStatusEnum) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
