// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// UsbDeviceOrderByInput usb device order by input
//
// swagger:model UsbDeviceOrderByInput
type UsbDeviceOrderByInput string

func NewUsbDeviceOrderByInput(value UsbDeviceOrderByInput) *UsbDeviceOrderByInput {
	v := value
	return &v
}

const (

	// UsbDeviceOrderByInputBindedASC captures enum value "binded_ASC"
	UsbDeviceOrderByInputBindedASC UsbDeviceOrderByInput = "binded_ASC"

	// UsbDeviceOrderByInputBindedDESC captures enum value "binded_DESC"
	UsbDeviceOrderByInputBindedDESC UsbDeviceOrderByInput = "binded_DESC"

	// UsbDeviceOrderByInputCreatedAtASC captures enum value "createdAt_ASC"
	UsbDeviceOrderByInputCreatedAtASC UsbDeviceOrderByInput = "createdAt_ASC"

	// UsbDeviceOrderByInputCreatedAtDESC captures enum value "createdAt_DESC"
	UsbDeviceOrderByInputCreatedAtDESC UsbDeviceOrderByInput = "createdAt_DESC"

	// UsbDeviceOrderByInputDescriptionASC captures enum value "description_ASC"
	UsbDeviceOrderByInputDescriptionASC UsbDeviceOrderByInput = "description_ASC"

	// UsbDeviceOrderByInputDescriptionDESC captures enum value "description_DESC"
	UsbDeviceOrderByInputDescriptionDESC UsbDeviceOrderByInput = "description_DESC"

	// UsbDeviceOrderByInputIDASC captures enum value "id_ASC"
	UsbDeviceOrderByInputIDASC UsbDeviceOrderByInput = "id_ASC"

	// UsbDeviceOrderByInputIDDESC captures enum value "id_DESC"
	UsbDeviceOrderByInputIDDESC UsbDeviceOrderByInput = "id_DESC"

	// UsbDeviceOrderByInputLocalCreatedAtASC captures enum value "local_created_at_ASC"
	UsbDeviceOrderByInputLocalCreatedAtASC UsbDeviceOrderByInput = "local_created_at_ASC"

	// UsbDeviceOrderByInputLocalCreatedAtDESC captures enum value "local_created_at_DESC"
	UsbDeviceOrderByInputLocalCreatedAtDESC UsbDeviceOrderByInput = "local_created_at_DESC"

	// UsbDeviceOrderByInputLocalIDASC captures enum value "local_id_ASC"
	UsbDeviceOrderByInputLocalIDASC UsbDeviceOrderByInput = "local_id_ASC"

	// UsbDeviceOrderByInputLocalIDDESC captures enum value "local_id_DESC"
	UsbDeviceOrderByInputLocalIDDESC UsbDeviceOrderByInput = "local_id_DESC"

	// UsbDeviceOrderByInputManufacturerASC captures enum value "manufacturer_ASC"
	UsbDeviceOrderByInputManufacturerASC UsbDeviceOrderByInput = "manufacturer_ASC"

	// UsbDeviceOrderByInputManufacturerDESC captures enum value "manufacturer_DESC"
	UsbDeviceOrderByInputManufacturerDESC UsbDeviceOrderByInput = "manufacturer_DESC"

	// UsbDeviceOrderByInputNameASC captures enum value "name_ASC"
	UsbDeviceOrderByInputNameASC UsbDeviceOrderByInput = "name_ASC"

	// UsbDeviceOrderByInputNameDESC captures enum value "name_DESC"
	UsbDeviceOrderByInputNameDESC UsbDeviceOrderByInput = "name_DESC"

	// UsbDeviceOrderByInputSizeASC captures enum value "size_ASC"
	UsbDeviceOrderByInputSizeASC UsbDeviceOrderByInput = "size_ASC"

	// UsbDeviceOrderByInputSizeDESC captures enum value "size_DESC"
	UsbDeviceOrderByInputSizeDESC UsbDeviceOrderByInput = "size_DESC"

	// UsbDeviceOrderByInputStatusASC captures enum value "status_ASC"
	UsbDeviceOrderByInputStatusASC UsbDeviceOrderByInput = "status_ASC"

	// UsbDeviceOrderByInputStatusDESC captures enum value "status_DESC"
	UsbDeviceOrderByInputStatusDESC UsbDeviceOrderByInput = "status_DESC"

	// UsbDeviceOrderByInputUpdatedAtASC captures enum value "updatedAt_ASC"
	UsbDeviceOrderByInputUpdatedAtASC UsbDeviceOrderByInput = "updatedAt_ASC"

	// UsbDeviceOrderByInputUpdatedAtDESC captures enum value "updatedAt_DESC"
	UsbDeviceOrderByInputUpdatedAtDESC UsbDeviceOrderByInput = "updatedAt_DESC"

	// UsbDeviceOrderByInputUsbTypeASC captures enum value "usb_type_ASC"
	UsbDeviceOrderByInputUsbTypeASC UsbDeviceOrderByInput = "usb_type_ASC"

	// UsbDeviceOrderByInputUsbTypeDESC captures enum value "usb_type_DESC"
	UsbDeviceOrderByInputUsbTypeDESC UsbDeviceOrderByInput = "usb_type_DESC"
)

// for schema
var usbDeviceOrderByInputEnum []interface{}

func init() {
	var res []UsbDeviceOrderByInput
	if err := json.Unmarshal([]byte(`["binded_ASC","binded_DESC","createdAt_ASC","createdAt_DESC","description_ASC","description_DESC","id_ASC","id_DESC","local_created_at_ASC","local_created_at_DESC","local_id_ASC","local_id_DESC","manufacturer_ASC","manufacturer_DESC","name_ASC","name_DESC","size_ASC","size_DESC","status_ASC","status_DESC","updatedAt_ASC","updatedAt_DESC","usb_type_ASC","usb_type_DESC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		usbDeviceOrderByInputEnum = append(usbDeviceOrderByInputEnum, v)
	}
}

func (m UsbDeviceOrderByInput) validateUsbDeviceOrderByInputEnum(path, location string, value UsbDeviceOrderByInput) error {
	if err := validate.EnumCase(path, location, value, usbDeviceOrderByInputEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this usb device order by input
func (m UsbDeviceOrderByInput) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateUsbDeviceOrderByInputEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this usb device order by input based on context it is used
func (m UsbDeviceOrderByInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
