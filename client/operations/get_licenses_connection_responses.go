// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Yuyz0112/cloudtower-go-sdk/models"
)

// GetLicensesConnectionReader is a Reader for the GetLicensesConnection structure.
type GetLicensesConnectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLicensesConnectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLicensesConnectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLicensesConnectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLicensesConnectionOK creates a GetLicensesConnectionOK with default headers values
func NewGetLicensesConnectionOK() *GetLicensesConnectionOK {
	return &GetLicensesConnectionOK{}
}

/* GetLicensesConnectionOK describes a response with status code 200, with default header values.

Ok
*/
type GetLicensesConnectionOK struct {
	Payload *models.LicenseConnection
}

func (o *GetLicensesConnectionOK) Error() string {
	return fmt.Sprintf("[POST /get-licenses-connection][%d] getLicensesConnectionOK  %+v", 200, o.Payload)
}
func (o *GetLicensesConnectionOK) GetPayload() *models.LicenseConnection {
	return o.Payload
}

func (o *GetLicensesConnectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LicenseConnection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLicensesConnectionBadRequest creates a GetLicensesConnectionBadRequest with default headers values
func NewGetLicensesConnectionBadRequest() *GetLicensesConnectionBadRequest {
	return &GetLicensesConnectionBadRequest{}
}

/* GetLicensesConnectionBadRequest describes a response with status code 400, with default header values.

GetLicensesConnectionBadRequest get licenses connection bad request
*/
type GetLicensesConnectionBadRequest struct {
	Payload string
}

func (o *GetLicensesConnectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /get-licenses-connection][%d] getLicensesConnectionBadRequest  %+v", 400, o.Payload)
}
func (o *GetLicensesConnectionBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetLicensesConnectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
